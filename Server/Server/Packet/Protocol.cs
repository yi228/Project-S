// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Protobuf.Protocol {

  /// <summary>Holder for reflection information generated from Protocol.proto</summary>
  public static partial class ProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for Protocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5Qcm90b2NvbC5wcm90bxIIUHJvdG9jb2waH2dvb2dsZS9wcm90b2J1Zi90",
            "aW1lc3RhbXAucHJvdG8iMwoLU19FbnRlckdhbWUSJAoGb2JqZWN0GAEgASgL",
            "MhQuUHJvdG9jb2wuT2JqZWN0SW5mbyI2CgtTX0xlYXZlR2FtZRITCgtwbGF5",
            "ZXJDb3VudBgBIAEoBRISCgppc0F0dGFja2VkGAIgASgIIjAKB1NfU3Bhd24S",
            "JQoHb2JqZWN0cxgBIAMoCzIULlByb3RvY29sLk9iamVjdEluZm8iRwoJU19E",
            "ZXNwYXduEhEKCW9iamVjdElkcxgBIAMoBRITCgtwbGF5ZXJDb3VudBgCIAEo",
            "BRISCgpjYW5SZXNwYXduGAMgASgIIkYKBkNfTW92ZRInCgdwb3NJbmZvGAEg",
            "ASgLMhYuUHJvdG9jb2wuUG9zaXRpb25JbmZvEhMKC3VzZVRlbGVwb3J0GAIg",
            "ASgIInEKBlNfTW92ZRIQCghvYmplY3RJZBgBIAEoBRInCgdwb3NJbmZvGAIg",
            "ASgLMhYuUHJvdG9jb2wuUG9zaXRpb25JbmZvEhcKD2J1bGxldFNjYWxlQnVm",
            "ZhgDIAEoAhITCgt1c2VUZWxlcG9ydBgEIAEoCCLvAQoHQ19Ta2lsbBIhCgRp",
            "bmZvGAEgASgLMhMuUHJvdG9jb2wuU2tpbGxJbmZvEiYKCWRpclZlY3RvchgC",
            "IAMoCzITLlByb3RvY29sLkRpclZlY3RvchIcCgRzdGF0GAMgASgLMg4uUHJv",
            "dG9jb2wuU3RhdBInCgdwb3NJbmZvGAQgAygLMhYuUHJvdG9jb2wuUG9zaXRp",
            "b25JbmZvEhQKDGlzQnVsbGV0QnVmZhgFIAEoCBISCgpwbGF5ZXJSb3R6GAYg",
            "ASgCEigKCndlYXBvblR5cGUYByABKA4yFC5Qcm90b2NvbC5XZWFwb25UeXBl",
            "Is0BCgdTX1NraWxsEhAKCG9iamVjdElkGAEgASgFEiEKBGluZm8YAiABKAsy",
            "Ey5Qcm90b2NvbC5Ta2lsbEluZm8SJgoFc3RhdGUYAyABKA4yFy5Qcm90b2Nv",
            "bC5DcmVhdHVyZVN0YXRlEicKB3Bvc0luZm8YBCADKAsyFi5Qcm90b2NvbC5Q",
            "b3NpdGlvbkluZm8SEgoKcGxheWVyUm90ehgFIAEoAhIoCgp3ZWFwb25UeXBl",
            "GAYgASgOMhQuUHJvdG9jb2wuV2VhcG9uVHlwZSJ+CgtDX0hpdFBsYXllchIu",
            "ChBoaXR0ZXJPYmplY3RJbmZvGAEgASgLMhQuUHJvdG9jb2wuT2JqZWN0SW5m",
            "bxItCg9lbmVteU9iamVjdEluZm8YAiABKAsyFC5Qcm90b2NvbC5PYmplY3RJ",
            "bmZvEhAKCGJ1bGxldElkGAMgASgFIn4KC1NfSGl0UGxheWVyEhAKCGNsaWVu",
            "dElkGAEgASgFEi4KEGhpdHRlck9iamVjdEluZm8YAiABKAsyFC5Qcm90b2Nv",
            "bC5PYmplY3RJbmZvEi0KD2VuZW15T2JqZWN0SW5mbxgDIAEoCzIULlByb3Rv",
            "Y29sLk9iamVjdEluZm8ifwoMQ19IaXRNb25zdGVyEi4KEGhpdHRlck9iamVj",
            "dEluZm8YASABKAsyFC5Qcm90b2NvbC5PYmplY3RJbmZvEi0KD2VuZW15T2Jq",
            "ZWN0SW5mbxgCIAEoCzIULlByb3RvY29sLk9iamVjdEluZm8SEAoIYnVsbGV0",
            "SWQYAyABKAUibQoMU19IaXRNb25zdGVyEi4KEGhpdHRlck9iamVjdEluZm8Y",
            "ASABKAsyFC5Qcm90b2NvbC5PYmplY3RJbmZvEi0KD2VuZW15T2JqZWN0SW5m",
            "bxgCIAEoCzIULlByb3RvY29sLk9iamVjdEluZm8iMwoMU19GaW5kUGxheWVy",
            "EhEKCW1vbnN0ZXJJZBgBIAEoBRIQCghwbGF5ZXJJZBgCIAEoBSJKCgpTX0No",
            "YW5nZUhwEhAKCG9iamVjdElkGAEgASgFEgoKAmhwGAIgASgCEg4KBmlzQnVm",
            "ZhgDIAEoCBIOCgZidWZmSWQYBCABKAUiKwoFU19EaWUSEAoIb2JqZWN0SWQY",
            "ASABKAUSEAoIaGl0dGVySWQYAiABKAUiSQoLQ19FbnRlclJvb20SEAoIY2Fu",
            "RW50ZXIYASABKAgSKAoKd2VhcG9uVHlwZRgCIAEoDjIULlByb3RvY29sLldl",
            "YXBvblR5cGUieQoLU19FbnRlclJvb20SEAoIY2FuRW50ZXIYASABKAgSEwoL",
            "cGxheWVyQ291bnQYAiABKAUSEQoJbWF4UGxheWVyGAMgASgFEhwKFGRlbGF5",
            "QmVmb3JlU3RhcnRHYW1lGAQgASgFEhIKCnBhY2tldFRpY2sYBSABKAIiIgoL",
            "U19TdGFydEdhbWUSEwoLaXNTdGFydEdhbWUYASABKAgiIAoLQ19MZWF2ZUdh",
            "bWUSEQoJbGVhdmVHYW1lGAEgASgIIiIKC1NfTGVhdmVSb29tEhMKC3BsYXll",
            "ckNvdW50GAEgASgFIh4KCVNfRW5kR2FtZRIRCglpc0dhbWVFbmQYASABKAgi",
            "KgoJU19MZXZlbFVwEhAKCG9iamVjdElkGAEgASgFEgsKA2V4cBgCIAEoBSIY",
            "CglDX0xldmVsVXASCwoDZXhwGAEgASgFIkoKCFNfR2V0RXhwEhAKCG9iamVj",
            "dElkGAEgASgFEgsKA2V4cBgCIAEoBRIQCgh0b3RhbEV4cBgDIAEoBRINCgVs",
            "ZXZlbBgEIAEoBSIXCghDX0dldEV4cBILCgNleHAYASABKAUiPgoMU19DaGFu",
            "Z2VTdGF0EhAKCG9iamVjdElkGAEgASgFEhwKBHN0YXQYAiABKAsyDi5Qcm90",
            "b2NvbC5TdGF0IiwKDENfQ2hhbmdlU3RhdBIcCgRzdGF0GAEgASgLMg4uUHJv",
            "dG9jb2wuU3RhdCJJCg1TX0NoYW5nZVN0YXRlEhAKCG9iamVjdElkGAEgASgF",
            "EiYKBXN0YXRlGAIgASgOMhcuUHJvdG9jb2wuQ3JlYXR1cmVTdGF0ZSI3Cg1D",
            "X0NoYW5nZVN0YXRlEiYKBXN0YXRlGAEgASgOMhcuUHJvdG9jb2wuQ3JlYXR1",
            "cmVTdGF0ZSIuCgxTX0NoYW5nZVJvdHoSEAoIb2JqZWN0SWQYASABKAUSDAoE",
            "cm90WhgCIAEoAiIcCgxDX0NoYW5nZVJvdHoSDAoEcm90WhgBIAEoAiIdCglD",
            "X091dEdhbWUSEAoIb2JqZWN0SWQYASABKAUiJwoLQ19DaGVja0luZm8SCgoC",
            "aWQYASABKAUSDAoEcm90WhgCIAEoAiI+ChJDX0NoYW5nZVdlYXBvblR5cGUS",
            "KAoKd2VhcG9uVHlwZRgBIAEoDjIULlByb3RvY29sLldlYXBvblR5cGUiUAoS",
            "U19DaGFuZ2VXZWFwb25UeXBlEhAKCG9iamVjdElkGAEgASgFEigKCndlYXBv",
            "blR5cGUYAiABKA4yFC5Qcm90b2NvbC5XZWFwb25UeXBlIkUKC0NfUGxheVNv",
            "dW5kEgwKBHBhdGgYASABKAkSEwoLaXNOb3RQbGF5ZXIYAiABKAgSEwoLbm90",
            "UGxheWVySWQYAyABKAUiLQoLU19QbGF5U291bmQSDAoEcGF0aBgBIAEoCRIQ",
            "CghvYmplY3RJZBgCIAEoBSIbCgtTX0NvdW50VGltZRIMCgR0aW1lGAEgASgF",
            "IhwKDENfQ2hhbmdlR29sZBIMCgRnb2xkGAEgASgFIi4KDFNfQ2hhbmdlR29s",
            "ZBIMCgRnb2xkGAEgASgFEhAKCG9iamVjdElkGAIgASgFIjgKDUNfVXNlVGVs",
            "ZXBvcnQSJwoHcG9zSW5mbxgBIAEoCzIWLlByb3RvY29sLlBvc2l0aW9uSW5m",
            "byJKCg1TX1VzZVRlbGVwb3J0EicKB3Bvc0luZm8YASABKAsyFi5Qcm90b2Nv",
            "bC5Qb3NpdGlvbkluZm8SEAoIb2JqZWN0SWQYAiABKAUifwoKU19WaWV3VGV4",
            "dBIOCgZhcmVhSWQYASABKAUSJQoIc3Bhd25Qb3MYAiABKAsyEy5Qcm90b2Nv",
            "bC5EaXJWZWN0b3ISEAoIb2JqZWN0SWQYAyABKAUSKAoHbXNnVHlwZRgEIAEo",
            "DjIXLlByb3RvY29sLlN5c3RlbU1TR1R5cGUiIQoPU19EZXN0cm95UG9ydGFs",
            "Eg4KBmFyZWFJZBgBIAEoBSI4CgpDX0NoYW5nZUhwEgoKAmhwGAEgASgCEg4K",
            "BmlzQnVmZhgCIAEoCBIOCgZidWZmSWQYAyABKAUiPgoNQ19DaGFuZ2VTcGVl",
            "ZBINCgVzcGVlZBgBIAEoAhIOCgZpc0J1ZmYYAiABKAgSDgoGYnVmZklkGAMg",
            "ASgFIlAKDVNfQ2hhbmdlU3BlZWQSDQoFc3BlZWQYASABKAISDgoGaXNCdWZm",
            "GAIgASgIEhAKCG9iamVjdElkGAMgASgFEg4KBmJ1ZmZJZBgEIAEoBSJACg5D",
            "X0NoYW5nZUF0dGFjaxIOCgZhdHRhY2sYASABKAISDgoGaXNCdWZmGAIgASgI",
            "Eg4KBmJ1ZmZJZBgDIAEoBSJSCg5TX0NoYW5nZUF0dGFjaxIOCgZhdHRhY2sY",
            "ASABKAISDgoGaXNCdWZmGAIgASgIEhAKCG9iamVjdElkGAMgASgFEg4KBmJ1",
            "ZmZJZBgEIAEoBSI+Cg1DX0NoYW5nZVNpZ2h0Eg0KBXNpZ2h0GAEgASgCEg4K",
            "BmlzQnVmZhgCIAEoCBIOCgZidWZmSWQYAyABKAUiUAoNU19DaGFuZ2VTaWdo",
            "dBINCgVzaWdodBgBIAEoAhIOCgZpc0J1ZmYYAiABKAgSEAoIb2JqZWN0SWQY",
            "AyABKAUSDgoGYnVmZklkGAQgASgFIi4KClNfQWRkQmxvY2sSDgoGaXNCdWZm",
            "GAEgASgIEhAKCG9iamVjdElkGAIgASgFIhwKCkNfQWRkQmxvY2sSDgoGaXNC",
            "dWZmGAEgASgIIkIKCkNfU2hvcEJ1ZmYSDgoGaXNCdWZmGAEgASgIEiQKBHR5",
            "cGUYAiABKA4yFi5Qcm90b2NvbC5TaG9wQnVmZlR5cGUiVAoKU19TaG9wQnVm",
            "ZhIOCgZpc0J1ZmYYASABKAgSJAoEdHlwZRgCIAEoDjIWLlByb3RvY29sLlNo",
            "b3BCdWZmVHlwZRIQCghvYmplY3RJZBgDIAEoBSIgCgxTX0JyZWFrQmxvY2sS",
            "EAoIb2JqZWN0SWQYASABKAUiJAoRU19NYXBNYW5pcHVsYXRpb24SDwoHbWFw",
            "RGF0YRgBIAEoCSIkChFDX01hcE1hbmlwdWxhdGlvbhIPCgdtYXBEYXRhGAEg",
            "ASgJIg0KC1NfRm9yY2VRdWl0IqsBCgpPYmplY3RJbmZvEhAKCG9iamVjdElk",
            "GAEgASgFEgwKBG5hbWUYAiABKAkSJwoHcG9zSW5mbxgDIAEoCzIWLlByb3Rv",
            "Y29sLlBvc2l0aW9uSW5mbxIcCgRzdGF0GAQgASgLMg4uUHJvdG9jb2wuU3Rh",
            "dBIoCgp3ZWFwb25UeXBlGAUgASgOMhQuUHJvdG9jb2wuV2VhcG9uVHlwZRIM",
            "CgRnb2xkGAYgASgFImAKDFBvc2l0aW9uSW5mbxImCgVzdGF0ZRgBIAEoDjIX",
            "LlByb3RvY29sLkNyZWF0dXJlU3RhdGUSDAoEcG9zWBgCIAEoAhIMCgRwb3NZ",
            "GAMgASgCEgwKBHJvdFoYBCABKAIiJwoJRGlyVmVjdG9yEgwKBHBvc1gYASAB",
            "KAISDAoEcG9zWRgCIAEoAiIcCglTa2lsbEluZm8SDwoHc2tpbGxJZBgBIAEo",
            "BSKFAQoEU3RhdBIKCgJocBgBIAEoAhINCgVtYXhIcBgCIAEoAhIOCgZhdHRh",
            "Y2sYAyABKAISDwoHZGVmZW5zZRgEIAEoAhINCgVzcGVlZBgFIAEoAhISCgpj",
            "YW1lcmFTaXplGAYgASgCEgwKBGNvc3QYByABKAUSEAoIY29vbFRpbWUYCCAB",
            "KAIqkQgKBU1zZ0lkEhAKDFNfRU5URVJfR0FNRRAAEhAKDFNfTEVBVkVfR0FN",
            "RRABEgsKB1NfU1BBV04QAhINCglTX0RFU1BBV04QAxIKCgZDX01PVkUQBBIK",
            "CgZTX01PVkUQBRILCgdDX1NLSUxMEAYSCwoHU19TS0lMTBAHEhAKDENfSElU",
            "X1BMQVlFUhAIEhAKDFNfSElUX1BMQVlFUhAJEhEKDUNfSElUX01PTlNURVIQ",
            "ChIRCg1TX0hJVF9NT05TVEVSEAsSEQoNU19GSU5EX1BMQVlFUhAMEg8KC1Nf",
            "Q0hBTkdFX0hQEA0SCQoFU19ESUUQDhIQCgxDX0VOVEVSX1JPT00QDxIQCgxT",
            "X0VOVEVSX1JPT00QEBIQCgxTX1NUQVJUX0dBTUUQERIQCgxDX0xFQVZFX0dB",
            "TUUQEhIOCgpTX0VORF9HQU1FEBMSEAoMU19MRUFWRV9ST09NEBQSDgoKU19M",
            "RVZFTF9VUBAVEg4KCkNfTEVWRUxfVVAQFhINCglTX0dFVF9FWFAQFxINCglD",
            "X0dFVF9FWFAQGBIRCg1TX0NIQU5HRV9TVEFUEBkSEQoNQ19DSEFOR0VfU1RB",
            "VBAaEhIKDlNfQ0hBTkdFX1NUQVRFEBsSEgoOQ19DSEFOR0VfU1RBVEUQHBIR",
            "Cg1DX0NIQU5HRV9ST1RaEB0SEQoNU19DSEFOR0VfUk9UWhAeEg4KCkNfT1VU",
            "X0dBTUUQHxIQCgxDX0NIRUNLX0lORk8QIBIYChRDX0NIQU5HRV9XRUFQT05f",
            "VFlQRRAhEhgKFFNfQ0hBTkdFX1dFQVBPTl9UWVBFECISEAoMQ19QTEFZX1NP",
            "VU5EECMSEAoMU19QTEFZX1NPVU5EECQSEAoMU19DT1VOVF9USU1FECUSEQoN",
            "Q19DSEFOR0VfR09MRBAmEhEKDVNfQ0hBTkdFX0dPTEQQJxISCg5DX1VTRV9U",
            "RUxFUE9SVBAoEhIKDlNfVVNFX1RFTEVQT1JUECkSDwoLU19WSUVXX1RFWFQQ",
            "KhIUChBTX0RFU1RST1lfUE9SVEFMECsSDwoLQ19DSEFOR0VfSFAQLBISCg5D",
            "X0NIQU5HRV9TUEVFRBAtEhIKDlNfQ0hBTkdFX1NQRUVEEC4SEwoPQ19DSEFO",
            "R0VfQVRUQUNLEC8SEwoPU19DSEFOR0VfQVRUQUNLEDASEgoOQ19DSEFOR0Vf",
            "U0lHSFQQMRISCg5TX0NIQU5HRV9TSUdIVBAyEg8KC0NfU0hPUF9CVUZGEDMS",
            "DwoLU19BRERfQkxPQ0sQNBIRCg1TX0JSRUFLX0JMT0NLEDUSFgoSU19NQVBf",
            "TUFOSVBVTEFUSU9OEDYSFgoSQ19NQVBfTUFOSVBVTEFUSU9OEDcSEAoMU19G",
            "T1JDRV9RVUlUEDgqUQoNQ3JlYXR1cmVTdGF0ZRIICgRJRExFEAASCgoGTU9W",
            "SU5HEAESCAoERklSRRACEgkKBVNLSUxMEAMSCAoEREVBRBAEEgsKB0NIQVNJ",
            "TkcQBSpNCg5HYW1lT2JqZWN0VHlwZRIICgROT05FEAASCgoGUExBWUVSEAES",
            "CwoHTU9OU1RFUhACEg4KClBST0pFQ1RJTEUQAxIICgRCVUZGEAQqSQoKV2Vh",
            "cG9uVHlwZRILCgdERUZBVUxUEAASCgoGUElTVE9MEAESCQoFUklGTEUQAhIK",
            "CgZTTklQRVIQAxILCgdTSE9UR1VOEAQqegoLTW9uc3RlclR5cGUSEAoMTU9O",
            "U1RFUl9OT05FEAASBwoDQkFUEAESEQoNTU9OU1RFUl9QTEFOVBACEgoKBkRS",
            "QUdPThADEg0KCUVWSUxfTUFHRRAEEgkKBUdPTEVNEAUSCgoGTElaQVJEEAYS",
            "CwoHU1BFQ1RPUhAHKlsKDVN5c3RlbU1TR1R5cGUSEAoMTVNHVFlQRV9OT05F",
            "EAASFgoSTUFQX0NMT1NFX1JFTUlOREVSEAESEQoNTUFQX0NMT1NFX05PVxAC",
            "Eg0KCU1BUF9NQVRDSBADKkoKCEFyZWFUeXBlEg0KCUFSRUFfTk9ORRAAEgoK",
            "BkZPUkVTVBABEgoKBkRFU0VSVBACEgwKCFNOT1dMQU5EEAMSCQoFT0NFQU4Q",
            "BCpOCghCdWZmVHlwZRINCglCVUZGX05PTkUQABIGCgJIUBABEgkKBVNQRUVE",
            "EAISCgoGQVRUQUNLEAMSCQoFU0lHSFQQBBIJCgVMSUdIVBAFKmMKDFNob3BC",
            "dWZmVHlwZRISCg5TSE9QX0JVRkZfTk9ORRAAEg4KClNIT1BfQkxPQ0sQARIP",
            "CgtTSE9QX0FUVEFDSxACEg4KClNIT1BfU1BFRUQQAxIOCgpTSE9QX1NJR0hU",
            "EARCG6oCGEdvb2dsZS5Qcm90b2J1Zi5Qcm90b2NvbGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Protobuf.Protocol.MsgId), typeof(global::Google.Protobuf.Protocol.CreatureState), typeof(global::Google.Protobuf.Protocol.GameObjectType), typeof(global::Google.Protobuf.Protocol.WeaponType), typeof(global::Google.Protobuf.Protocol.MonsterType), typeof(global::Google.Protobuf.Protocol.SystemMSGType), typeof(global::Google.Protobuf.Protocol.AreaType), typeof(global::Google.Protobuf.Protocol.BuffType), typeof(global::Google.Protobuf.Protocol.ShopBuffType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_EnterGame), global::Google.Protobuf.Protocol.S_EnterGame.Parser, new[]{ "Object" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_LeaveGame), global::Google.Protobuf.Protocol.S_LeaveGame.Parser, new[]{ "PlayerCount", "IsAttacked" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_Spawn), global::Google.Protobuf.Protocol.S_Spawn.Parser, new[]{ "Objects" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_Despawn), global::Google.Protobuf.Protocol.S_Despawn.Parser, new[]{ "ObjectIds", "PlayerCount", "CanRespawn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_Move), global::Google.Protobuf.Protocol.C_Move.Parser, new[]{ "PosInfo", "UseTeleport" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_Move), global::Google.Protobuf.Protocol.S_Move.Parser, new[]{ "ObjectId", "PosInfo", "BulletScaleBuff", "UseTeleport" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_Skill), global::Google.Protobuf.Protocol.C_Skill.Parser, new[]{ "Info", "DirVector", "Stat", "PosInfo", "IsBulletBuff", "PlayerRotz", "WeaponType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_Skill), global::Google.Protobuf.Protocol.S_Skill.Parser, new[]{ "ObjectId", "Info", "State", "PosInfo", "PlayerRotz", "WeaponType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_HitPlayer), global::Google.Protobuf.Protocol.C_HitPlayer.Parser, new[]{ "HitterObjectInfo", "EnemyObjectInfo", "BulletId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_HitPlayer), global::Google.Protobuf.Protocol.S_HitPlayer.Parser, new[]{ "ClientId", "HitterObjectInfo", "EnemyObjectInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_HitMonster), global::Google.Protobuf.Protocol.C_HitMonster.Parser, new[]{ "HitterObjectInfo", "EnemyObjectInfo", "BulletId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_HitMonster), global::Google.Protobuf.Protocol.S_HitMonster.Parser, new[]{ "HitterObjectInfo", "EnemyObjectInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_FindPlayer), global::Google.Protobuf.Protocol.S_FindPlayer.Parser, new[]{ "MonsterId", "PlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_ChangeHp), global::Google.Protobuf.Protocol.S_ChangeHp.Parser, new[]{ "ObjectId", "Hp", "IsBuff", "BuffId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_Die), global::Google.Protobuf.Protocol.S_Die.Parser, new[]{ "ObjectId", "HitterId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_EnterRoom), global::Google.Protobuf.Protocol.C_EnterRoom.Parser, new[]{ "CanEnter", "WeaponType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_EnterRoom), global::Google.Protobuf.Protocol.S_EnterRoom.Parser, new[]{ "CanEnter", "PlayerCount", "MaxPlayer", "DelayBeforeStartGame", "PacketTick" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_StartGame), global::Google.Protobuf.Protocol.S_StartGame.Parser, new[]{ "IsStartGame" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_LeaveGame), global::Google.Protobuf.Protocol.C_LeaveGame.Parser, new[]{ "LeaveGame" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_LeaveRoom), global::Google.Protobuf.Protocol.S_LeaveRoom.Parser, new[]{ "PlayerCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_EndGame), global::Google.Protobuf.Protocol.S_EndGame.Parser, new[]{ "IsGameEnd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_LevelUp), global::Google.Protobuf.Protocol.S_LevelUp.Parser, new[]{ "ObjectId", "Exp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_LevelUp), global::Google.Protobuf.Protocol.C_LevelUp.Parser, new[]{ "Exp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_GetExp), global::Google.Protobuf.Protocol.S_GetExp.Parser, new[]{ "ObjectId", "Exp", "TotalExp", "Level" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_GetExp), global::Google.Protobuf.Protocol.C_GetExp.Parser, new[]{ "Exp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_ChangeStat), global::Google.Protobuf.Protocol.S_ChangeStat.Parser, new[]{ "ObjectId", "Stat" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_ChangeStat), global::Google.Protobuf.Protocol.C_ChangeStat.Parser, new[]{ "Stat" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_ChangeState), global::Google.Protobuf.Protocol.S_ChangeState.Parser, new[]{ "ObjectId", "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_ChangeState), global::Google.Protobuf.Protocol.C_ChangeState.Parser, new[]{ "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_ChangeRotz), global::Google.Protobuf.Protocol.S_ChangeRotz.Parser, new[]{ "ObjectId", "RotZ" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_ChangeRotz), global::Google.Protobuf.Protocol.C_ChangeRotz.Parser, new[]{ "RotZ" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_OutGame), global::Google.Protobuf.Protocol.C_OutGame.Parser, new[]{ "ObjectId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_CheckInfo), global::Google.Protobuf.Protocol.C_CheckInfo.Parser, new[]{ "Id", "RotZ" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_ChangeWeaponType), global::Google.Protobuf.Protocol.C_ChangeWeaponType.Parser, new[]{ "WeaponType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_ChangeWeaponType), global::Google.Protobuf.Protocol.S_ChangeWeaponType.Parser, new[]{ "ObjectId", "WeaponType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_PlaySound), global::Google.Protobuf.Protocol.C_PlaySound.Parser, new[]{ "Path", "IsNotPlayer", "NotPlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_PlaySound), global::Google.Protobuf.Protocol.S_PlaySound.Parser, new[]{ "Path", "ObjectId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_CountTime), global::Google.Protobuf.Protocol.S_CountTime.Parser, new[]{ "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_ChangeGold), global::Google.Protobuf.Protocol.C_ChangeGold.Parser, new[]{ "Gold" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_ChangeGold), global::Google.Protobuf.Protocol.S_ChangeGold.Parser, new[]{ "Gold", "ObjectId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_UseTeleport), global::Google.Protobuf.Protocol.C_UseTeleport.Parser, new[]{ "PosInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_UseTeleport), global::Google.Protobuf.Protocol.S_UseTeleport.Parser, new[]{ "PosInfo", "ObjectId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_ViewText), global::Google.Protobuf.Protocol.S_ViewText.Parser, new[]{ "AreaId", "SpawnPos", "ObjectId", "MsgType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_DestroyPortal), global::Google.Protobuf.Protocol.S_DestroyPortal.Parser, new[]{ "AreaId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_ChangeHp), global::Google.Protobuf.Protocol.C_ChangeHp.Parser, new[]{ "Hp", "IsBuff", "BuffId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_ChangeSpeed), global::Google.Protobuf.Protocol.C_ChangeSpeed.Parser, new[]{ "Speed", "IsBuff", "BuffId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_ChangeSpeed), global::Google.Protobuf.Protocol.S_ChangeSpeed.Parser, new[]{ "Speed", "IsBuff", "ObjectId", "BuffId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_ChangeAttack), global::Google.Protobuf.Protocol.C_ChangeAttack.Parser, new[]{ "Attack", "IsBuff", "BuffId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_ChangeAttack), global::Google.Protobuf.Protocol.S_ChangeAttack.Parser, new[]{ "Attack", "IsBuff", "ObjectId", "BuffId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_ChangeSight), global::Google.Protobuf.Protocol.C_ChangeSight.Parser, new[]{ "Sight", "IsBuff", "BuffId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_ChangeSight), global::Google.Protobuf.Protocol.S_ChangeSight.Parser, new[]{ "Sight", "IsBuff", "ObjectId", "BuffId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_AddBlock), global::Google.Protobuf.Protocol.S_AddBlock.Parser, new[]{ "IsBuff", "ObjectId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_AddBlock), global::Google.Protobuf.Protocol.C_AddBlock.Parser, new[]{ "IsBuff" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_ShopBuff), global::Google.Protobuf.Protocol.C_ShopBuff.Parser, new[]{ "IsBuff", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_ShopBuff), global::Google.Protobuf.Protocol.S_ShopBuff.Parser, new[]{ "IsBuff", "Type", "ObjectId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_BreakBlock), global::Google.Protobuf.Protocol.S_BreakBlock.Parser, new[]{ "ObjectId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_MapManipulation), global::Google.Protobuf.Protocol.S_MapManipulation.Parser, new[]{ "MapData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_MapManipulation), global::Google.Protobuf.Protocol.C_MapManipulation.Parser, new[]{ "MapData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_ForceQuit), global::Google.Protobuf.Protocol.S_ForceQuit.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.ObjectInfo), global::Google.Protobuf.Protocol.ObjectInfo.Parser, new[]{ "ObjectId", "Name", "PosInfo", "Stat", "WeaponType", "Gold" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.PositionInfo), global::Google.Protobuf.Protocol.PositionInfo.Parser, new[]{ "State", "PosX", "PosY", "RotZ" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DirVector), global::Google.Protobuf.Protocol.DirVector.Parser, new[]{ "PosX", "PosY" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.SkillInfo), global::Google.Protobuf.Protocol.SkillInfo.Parser, new[]{ "SkillId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.Stat), global::Google.Protobuf.Protocol.Stat.Parser, new[]{ "Hp", "MaxHp", "Attack", "Defense", "Speed", "CameraSize", "Cost", "CoolTime" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MsgId {
    [pbr::OriginalName("S_ENTER_GAME")] SEnterGame = 0,
    [pbr::OriginalName("S_LEAVE_GAME")] SLeaveGame = 1,
    [pbr::OriginalName("S_SPAWN")] SSpawn = 2,
    [pbr::OriginalName("S_DESPAWN")] SDespawn = 3,
    [pbr::OriginalName("C_MOVE")] CMove = 4,
    [pbr::OriginalName("S_MOVE")] SMove = 5,
    [pbr::OriginalName("C_SKILL")] CSkill = 6,
    [pbr::OriginalName("S_SKILL")] SSkill = 7,
    [pbr::OriginalName("C_HIT_PLAYER")] CHitPlayer = 8,
    [pbr::OriginalName("S_HIT_PLAYER")] SHitPlayer = 9,
    [pbr::OriginalName("C_HIT_MONSTER")] CHitMonster = 10,
    [pbr::OriginalName("S_HIT_MONSTER")] SHitMonster = 11,
    [pbr::OriginalName("S_FIND_PLAYER")] SFindPlayer = 12,
    [pbr::OriginalName("S_CHANGE_HP")] SChangeHp = 13,
    [pbr::OriginalName("S_DIE")] SDie = 14,
    [pbr::OriginalName("C_ENTER_ROOM")] CEnterRoom = 15,
    [pbr::OriginalName("S_ENTER_ROOM")] SEnterRoom = 16,
    [pbr::OriginalName("S_START_GAME")] SStartGame = 17,
    [pbr::OriginalName("C_LEAVE_GAME")] CLeaveGame = 18,
    [pbr::OriginalName("S_END_GAME")] SEndGame = 19,
    [pbr::OriginalName("S_LEAVE_ROOM")] SLeaveRoom = 20,
    [pbr::OriginalName("S_LEVEL_UP")] SLevelUp = 21,
    [pbr::OriginalName("C_LEVEL_UP")] CLevelUp = 22,
    [pbr::OriginalName("S_GET_EXP")] SGetExp = 23,
    [pbr::OriginalName("C_GET_EXP")] CGetExp = 24,
    [pbr::OriginalName("S_CHANGE_STAT")] SChangeStat = 25,
    [pbr::OriginalName("C_CHANGE_STAT")] CChangeStat = 26,
    [pbr::OriginalName("S_CHANGE_STATE")] SChangeState = 27,
    [pbr::OriginalName("C_CHANGE_STATE")] CChangeState = 28,
    [pbr::OriginalName("C_CHANGE_ROTZ")] CChangeRotz = 29,
    [pbr::OriginalName("S_CHANGE_ROTZ")] SChangeRotz = 30,
    [pbr::OriginalName("C_OUT_GAME")] COutGame = 31,
    [pbr::OriginalName("C_CHECK_INFO")] CCheckInfo = 32,
    [pbr::OriginalName("C_CHANGE_WEAPON_TYPE")] CChangeWeaponType = 33,
    [pbr::OriginalName("S_CHANGE_WEAPON_TYPE")] SChangeWeaponType = 34,
    [pbr::OriginalName("C_PLAY_SOUND")] CPlaySound = 35,
    [pbr::OriginalName("S_PLAY_SOUND")] SPlaySound = 36,
    [pbr::OriginalName("S_COUNT_TIME")] SCountTime = 37,
    [pbr::OriginalName("C_CHANGE_GOLD")] CChangeGold = 38,
    [pbr::OriginalName("S_CHANGE_GOLD")] SChangeGold = 39,
    [pbr::OriginalName("C_USE_TELEPORT")] CUseTeleport = 40,
    [pbr::OriginalName("S_USE_TELEPORT")] SUseTeleport = 41,
    [pbr::OriginalName("S_VIEW_TEXT")] SViewText = 42,
    [pbr::OriginalName("S_DESTROY_PORTAL")] SDestroyPortal = 43,
    [pbr::OriginalName("C_CHANGE_HP")] CChangeHp = 44,
    [pbr::OriginalName("C_CHANGE_SPEED")] CChangeSpeed = 45,
    [pbr::OriginalName("S_CHANGE_SPEED")] SChangeSpeed = 46,
    [pbr::OriginalName("C_CHANGE_ATTACK")] CChangeAttack = 47,
    [pbr::OriginalName("S_CHANGE_ATTACK")] SChangeAttack = 48,
    [pbr::OriginalName("C_CHANGE_SIGHT")] CChangeSight = 49,
    [pbr::OriginalName("S_CHANGE_SIGHT")] SChangeSight = 50,
    [pbr::OriginalName("C_SHOP_BUFF")] CShopBuff = 51,
    [pbr::OriginalName("S_ADD_BLOCK")] SAddBlock = 52,
    [pbr::OriginalName("S_BREAK_BLOCK")] SBreakBlock = 53,
    [pbr::OriginalName("S_MAP_MANIPULATION")] SMapManipulation = 54,
    [pbr::OriginalName("C_MAP_MANIPULATION")] CMapManipulation = 55,
    [pbr::OriginalName("S_FORCE_QUIT")] SForceQuit = 56,
  }

  public enum CreatureState {
    [pbr::OriginalName("IDLE")] Idle = 0,
    [pbr::OriginalName("MOVING")] Moving = 1,
    [pbr::OriginalName("FIRE")] Fire = 2,
    [pbr::OriginalName("SKILL")] Skill = 3,
    [pbr::OriginalName("DEAD")] Dead = 4,
    [pbr::OriginalName("CHASING")] Chasing = 5,
  }

  public enum GameObjectType {
    [pbr::OriginalName("NONE")] None = 0,
    [pbr::OriginalName("PLAYER")] Player = 1,
    [pbr::OriginalName("MONSTER")] Monster = 2,
    [pbr::OriginalName("PROJECTILE")] Projectile = 3,
    [pbr::OriginalName("BUFF")] Buff = 4,
  }

  public enum WeaponType {
    [pbr::OriginalName("DEFAULT")] Default = 0,
    [pbr::OriginalName("PISTOL")] Pistol = 1,
    [pbr::OriginalName("RIFLE")] Rifle = 2,
    [pbr::OriginalName("SNIPER")] Sniper = 3,
    [pbr::OriginalName("SHOTGUN")] Shotgun = 4,
  }

  public enum MonsterType {
    [pbr::OriginalName("MONSTER_NONE")] MonsterNone = 0,
    [pbr::OriginalName("BAT")] Bat = 1,
    [pbr::OriginalName("MONSTER_PLANT")] MonsterPlant = 2,
    [pbr::OriginalName("DRAGON")] Dragon = 3,
    [pbr::OriginalName("EVIL_MAGE")] EvilMage = 4,
    [pbr::OriginalName("GOLEM")] Golem = 5,
    [pbr::OriginalName("LIZARD")] Lizard = 6,
    [pbr::OriginalName("SPECTOR")] Spector = 7,
  }

  public enum SystemMSGType {
    [pbr::OriginalName("MSGTYPE_NONE")] MsgtypeNone = 0,
    [pbr::OriginalName("MAP_CLOSE_REMINDER")] MapCloseReminder = 1,
    [pbr::OriginalName("MAP_CLOSE_NOW")] MapCloseNow = 2,
    [pbr::OriginalName("MAP_MATCH")] MapMatch = 3,
  }

  public enum AreaType {
    [pbr::OriginalName("AREA_NONE")] AreaNone = 0,
    [pbr::OriginalName("FOREST")] Forest = 1,
    [pbr::OriginalName("DESERT")] Desert = 2,
    [pbr::OriginalName("SNOWLAND")] Snowland = 3,
    [pbr::OriginalName("OCEAN")] Ocean = 4,
  }

  public enum BuffType {
    [pbr::OriginalName("BUFF_NONE")] BuffNone = 0,
    [pbr::OriginalName("HP")] Hp = 1,
    [pbr::OriginalName("SPEED")] Speed = 2,
    [pbr::OriginalName("ATTACK")] Attack = 3,
    [pbr::OriginalName("SIGHT")] Sight = 4,
    [pbr::OriginalName("LIGHT")] Light = 5,
  }

  public enum ShopBuffType {
    [pbr::OriginalName("SHOP_BUFF_NONE")] ShopBuffNone = 0,
    [pbr::OriginalName("SHOP_BLOCK")] ShopBlock = 1,
    [pbr::OriginalName("SHOP_ATTACK")] ShopAttack = 2,
    [pbr::OriginalName("SHOP_SPEED")] ShopSpeed = 3,
    [pbr::OriginalName("SHOP_SIGHT")] ShopSight = 4,
  }

  #endregion

  #region Messages
  public sealed partial class S_EnterGame : pb::IMessage<S_EnterGame> {
    private static readonly pb::MessageParser<S_EnterGame> _parser = new pb::MessageParser<S_EnterGame>(() => new S_EnterGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_EnterGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_EnterGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_EnterGame(S_EnterGame other) : this() {
      object_ = other.object_ != null ? other.object_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_EnterGame Clone() {
      return new S_EnterGame(this);
    }

    /// <summary>Field number for the "object" field.</summary>
    public const int ObjectFieldNumber = 1;
    private global::Google.Protobuf.Protocol.ObjectInfo object_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.ObjectInfo Object {
      get { return object_; }
      set {
        object_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_EnterGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_EnterGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Object, other.Object)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (object_ != null) hash ^= Object.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (object_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Object);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (object_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Object);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_EnterGame other) {
      if (other == null) {
        return;
      }
      if (other.object_ != null) {
        if (object_ == null) {
          Object = new global::Google.Protobuf.Protocol.ObjectInfo();
        }
        Object.MergeFrom(other.Object);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (object_ == null) {
              Object = new global::Google.Protobuf.Protocol.ObjectInfo();
            }
            input.ReadMessage(Object);
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_LeaveGame : pb::IMessage<S_LeaveGame> {
    private static readonly pb::MessageParser<S_LeaveGame> _parser = new pb::MessageParser<S_LeaveGame>(() => new S_LeaveGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_LeaveGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_LeaveGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_LeaveGame(S_LeaveGame other) : this() {
      playerCount_ = other.playerCount_;
      isAttacked_ = other.isAttacked_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_LeaveGame Clone() {
      return new S_LeaveGame(this);
    }

    /// <summary>Field number for the "playerCount" field.</summary>
    public const int PlayerCountFieldNumber = 1;
    private int playerCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerCount {
      get { return playerCount_; }
      set {
        playerCount_ = value;
      }
    }

    /// <summary>Field number for the "isAttacked" field.</summary>
    public const int IsAttackedFieldNumber = 2;
    private bool isAttacked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAttacked {
      get { return isAttacked_; }
      set {
        isAttacked_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_LeaveGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_LeaveGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerCount != other.PlayerCount) return false;
      if (IsAttacked != other.IsAttacked) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerCount != 0) hash ^= PlayerCount.GetHashCode();
      if (IsAttacked != false) hash ^= IsAttacked.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerCount);
      }
      if (IsAttacked != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsAttacked);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerCount);
      }
      if (IsAttacked != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_LeaveGame other) {
      if (other == null) {
        return;
      }
      if (other.PlayerCount != 0) {
        PlayerCount = other.PlayerCount;
      }
      if (other.IsAttacked != false) {
        IsAttacked = other.IsAttacked;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerCount = input.ReadInt32();
            break;
          }
          case 16: {
            IsAttacked = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_Spawn : pb::IMessage<S_Spawn> {
    private static readonly pb::MessageParser<S_Spawn> _parser = new pb::MessageParser<S_Spawn>(() => new S_Spawn());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_Spawn> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Spawn() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Spawn(S_Spawn other) : this() {
      objects_ = other.objects_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Spawn Clone() {
      return new S_Spawn(this);
    }

    /// <summary>Field number for the "objects" field.</summary>
    public const int ObjectsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Protobuf.Protocol.ObjectInfo> _repeated_objects_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Protobuf.Protocol.ObjectInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.Protocol.ObjectInfo> objects_ = new pbc::RepeatedField<global::Google.Protobuf.Protocol.ObjectInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.Protocol.ObjectInfo> Objects {
      get { return objects_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_Spawn);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_Spawn other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!objects_.Equals(other.objects_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= objects_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      objects_.WriteTo(output, _repeated_objects_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += objects_.CalculateSize(_repeated_objects_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_Spawn other) {
      if (other == null) {
        return;
      }
      objects_.Add(other.objects_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            objects_.AddEntriesFrom(input, _repeated_objects_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_Despawn : pb::IMessage<S_Despawn> {
    private static readonly pb::MessageParser<S_Despawn> _parser = new pb::MessageParser<S_Despawn>(() => new S_Despawn());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_Despawn> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Despawn() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Despawn(S_Despawn other) : this() {
      objectIds_ = other.objectIds_.Clone();
      playerCount_ = other.playerCount_;
      canRespawn_ = other.canRespawn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Despawn Clone() {
      return new S_Despawn(this);
    }

    /// <summary>Field number for the "objectIds" field.</summary>
    public const int ObjectIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_objectIds_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> objectIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ObjectIds {
      get { return objectIds_; }
    }

    /// <summary>Field number for the "playerCount" field.</summary>
    public const int PlayerCountFieldNumber = 2;
    private int playerCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerCount {
      get { return playerCount_; }
      set {
        playerCount_ = value;
      }
    }

    /// <summary>Field number for the "canRespawn" field.</summary>
    public const int CanRespawnFieldNumber = 3;
    private bool canRespawn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanRespawn {
      get { return canRespawn_; }
      set {
        canRespawn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_Despawn);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_Despawn other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!objectIds_.Equals(other.objectIds_)) return false;
      if (PlayerCount != other.PlayerCount) return false;
      if (CanRespawn != other.CanRespawn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= objectIds_.GetHashCode();
      if (PlayerCount != 0) hash ^= PlayerCount.GetHashCode();
      if (CanRespawn != false) hash ^= CanRespawn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      objectIds_.WriteTo(output, _repeated_objectIds_codec);
      if (PlayerCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerCount);
      }
      if (CanRespawn != false) {
        output.WriteRawTag(24);
        output.WriteBool(CanRespawn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += objectIds_.CalculateSize(_repeated_objectIds_codec);
      if (PlayerCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerCount);
      }
      if (CanRespawn != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_Despawn other) {
      if (other == null) {
        return;
      }
      objectIds_.Add(other.objectIds_);
      if (other.PlayerCount != 0) {
        PlayerCount = other.PlayerCount;
      }
      if (other.CanRespawn != false) {
        CanRespawn = other.CanRespawn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            objectIds_.AddEntriesFrom(input, _repeated_objectIds_codec);
            break;
          }
          case 16: {
            PlayerCount = input.ReadInt32();
            break;
          }
          case 24: {
            CanRespawn = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_Move : pb::IMessage<C_Move> {
    private static readonly pb::MessageParser<C_Move> _parser = new pb::MessageParser<C_Move>(() => new C_Move());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_Move> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_Move() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_Move(C_Move other) : this() {
      posInfo_ = other.posInfo_ != null ? other.posInfo_.Clone() : null;
      useTeleport_ = other.useTeleport_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_Move Clone() {
      return new C_Move(this);
    }

    /// <summary>Field number for the "posInfo" field.</summary>
    public const int PosInfoFieldNumber = 1;
    private global::Google.Protobuf.Protocol.PositionInfo posInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.PositionInfo PosInfo {
      get { return posInfo_; }
      set {
        posInfo_ = value;
      }
    }

    /// <summary>Field number for the "useTeleport" field.</summary>
    public const int UseTeleportFieldNumber = 2;
    private bool useTeleport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseTeleport {
      get { return useTeleport_; }
      set {
        useTeleport_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_Move);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_Move other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PosInfo, other.PosInfo)) return false;
      if (UseTeleport != other.UseTeleport) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (posInfo_ != null) hash ^= PosInfo.GetHashCode();
      if (UseTeleport != false) hash ^= UseTeleport.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (posInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PosInfo);
      }
      if (UseTeleport != false) {
        output.WriteRawTag(16);
        output.WriteBool(UseTeleport);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (posInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PosInfo);
      }
      if (UseTeleport != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_Move other) {
      if (other == null) {
        return;
      }
      if (other.posInfo_ != null) {
        if (posInfo_ == null) {
          PosInfo = new global::Google.Protobuf.Protocol.PositionInfo();
        }
        PosInfo.MergeFrom(other.PosInfo);
      }
      if (other.UseTeleport != false) {
        UseTeleport = other.UseTeleport;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (posInfo_ == null) {
              PosInfo = new global::Google.Protobuf.Protocol.PositionInfo();
            }
            input.ReadMessage(PosInfo);
            break;
          }
          case 16: {
            UseTeleport = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_Move : pb::IMessage<S_Move> {
    private static readonly pb::MessageParser<S_Move> _parser = new pb::MessageParser<S_Move>(() => new S_Move());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_Move> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Move() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Move(S_Move other) : this() {
      objectId_ = other.objectId_;
      posInfo_ = other.posInfo_ != null ? other.posInfo_.Clone() : null;
      bulletScaleBuff_ = other.bulletScaleBuff_;
      useTeleport_ = other.useTeleport_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Move Clone() {
      return new S_Move(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "posInfo" field.</summary>
    public const int PosInfoFieldNumber = 2;
    private global::Google.Protobuf.Protocol.PositionInfo posInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.PositionInfo PosInfo {
      get { return posInfo_; }
      set {
        posInfo_ = value;
      }
    }

    /// <summary>Field number for the "bulletScaleBuff" field.</summary>
    public const int BulletScaleBuffFieldNumber = 3;
    private float bulletScaleBuff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float BulletScaleBuff {
      get { return bulletScaleBuff_; }
      set {
        bulletScaleBuff_ = value;
      }
    }

    /// <summary>Field number for the "useTeleport" field.</summary>
    public const int UseTeleportFieldNumber = 4;
    private bool useTeleport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseTeleport {
      get { return useTeleport_; }
      set {
        useTeleport_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_Move);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_Move other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      if (!object.Equals(PosInfo, other.PosInfo)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BulletScaleBuff, other.BulletScaleBuff)) return false;
      if (UseTeleport != other.UseTeleport) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (posInfo_ != null) hash ^= PosInfo.GetHashCode();
      if (BulletScaleBuff != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BulletScaleBuff);
      if (UseTeleport != false) hash ^= UseTeleport.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ObjectId);
      }
      if (posInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PosInfo);
      }
      if (BulletScaleBuff != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(BulletScaleBuff);
      }
      if (UseTeleport != false) {
        output.WriteRawTag(32);
        output.WriteBool(UseTeleport);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (posInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PosInfo);
      }
      if (BulletScaleBuff != 0F) {
        size += 1 + 4;
      }
      if (UseTeleport != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_Move other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.posInfo_ != null) {
        if (posInfo_ == null) {
          PosInfo = new global::Google.Protobuf.Protocol.PositionInfo();
        }
        PosInfo.MergeFrom(other.PosInfo);
      }
      if (other.BulletScaleBuff != 0F) {
        BulletScaleBuff = other.BulletScaleBuff;
      }
      if (other.UseTeleport != false) {
        UseTeleport = other.UseTeleport;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadInt32();
            break;
          }
          case 18: {
            if (posInfo_ == null) {
              PosInfo = new global::Google.Protobuf.Protocol.PositionInfo();
            }
            input.ReadMessage(PosInfo);
            break;
          }
          case 29: {
            BulletScaleBuff = input.ReadFloat();
            break;
          }
          case 32: {
            UseTeleport = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_Skill : pb::IMessage<C_Skill> {
    private static readonly pb::MessageParser<C_Skill> _parser = new pb::MessageParser<C_Skill>(() => new C_Skill());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_Skill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_Skill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_Skill(C_Skill other) : this() {
      info_ = other.info_ != null ? other.info_.Clone() : null;
      dirVector_ = other.dirVector_.Clone();
      stat_ = other.stat_ != null ? other.stat_.Clone() : null;
      posInfo_ = other.posInfo_.Clone();
      isBulletBuff_ = other.isBulletBuff_;
      playerRotz_ = other.playerRotz_;
      weaponType_ = other.weaponType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_Skill Clone() {
      return new C_Skill(this);
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 1;
    private global::Google.Protobuf.Protocol.SkillInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.SkillInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    /// <summary>Field number for the "dirVector" field.</summary>
    public const int DirVectorFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Protobuf.Protocol.DirVector> _repeated_dirVector_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Protobuf.Protocol.DirVector.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.Protocol.DirVector> dirVector_ = new pbc::RepeatedField<global::Google.Protobuf.Protocol.DirVector>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.Protocol.DirVector> DirVector {
      get { return dirVector_; }
    }

    /// <summary>Field number for the "stat" field.</summary>
    public const int StatFieldNumber = 3;
    private global::Google.Protobuf.Protocol.Stat stat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.Stat Stat {
      get { return stat_; }
      set {
        stat_ = value;
      }
    }

    /// <summary>Field number for the "posInfo" field.</summary>
    public const int PosInfoFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Protobuf.Protocol.PositionInfo> _repeated_posInfo_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Protobuf.Protocol.PositionInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.Protocol.PositionInfo> posInfo_ = new pbc::RepeatedField<global::Google.Protobuf.Protocol.PositionInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.Protocol.PositionInfo> PosInfo {
      get { return posInfo_; }
    }

    /// <summary>Field number for the "isBulletBuff" field.</summary>
    public const int IsBulletBuffFieldNumber = 5;
    private bool isBulletBuff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBulletBuff {
      get { return isBulletBuff_; }
      set {
        isBulletBuff_ = value;
      }
    }

    /// <summary>Field number for the "playerRotz" field.</summary>
    public const int PlayerRotzFieldNumber = 6;
    private float playerRotz_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PlayerRotz {
      get { return playerRotz_; }
      set {
        playerRotz_ = value;
      }
    }

    /// <summary>Field number for the "weaponType" field.</summary>
    public const int WeaponTypeFieldNumber = 7;
    private global::Google.Protobuf.Protocol.WeaponType weaponType_ = global::Google.Protobuf.Protocol.WeaponType.Default;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.WeaponType WeaponType {
      get { return weaponType_; }
      set {
        weaponType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_Skill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_Skill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Info, other.Info)) return false;
      if(!dirVector_.Equals(other.dirVector_)) return false;
      if (!object.Equals(Stat, other.Stat)) return false;
      if(!posInfo_.Equals(other.posInfo_)) return false;
      if (IsBulletBuff != other.IsBulletBuff) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PlayerRotz, other.PlayerRotz)) return false;
      if (WeaponType != other.WeaponType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (info_ != null) hash ^= Info.GetHashCode();
      hash ^= dirVector_.GetHashCode();
      if (stat_ != null) hash ^= Stat.GetHashCode();
      hash ^= posInfo_.GetHashCode();
      if (IsBulletBuff != false) hash ^= IsBulletBuff.GetHashCode();
      if (PlayerRotz != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PlayerRotz);
      if (WeaponType != global::Google.Protobuf.Protocol.WeaponType.Default) hash ^= WeaponType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      dirVector_.WriteTo(output, _repeated_dirVector_codec);
      if (stat_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Stat);
      }
      posInfo_.WriteTo(output, _repeated_posInfo_codec);
      if (IsBulletBuff != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsBulletBuff);
      }
      if (PlayerRotz != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(PlayerRotz);
      }
      if (WeaponType != global::Google.Protobuf.Protocol.WeaponType.Default) {
        output.WriteRawTag(56);
        output.WriteEnum((int) WeaponType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      size += dirVector_.CalculateSize(_repeated_dirVector_codec);
      if (stat_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stat);
      }
      size += posInfo_.CalculateSize(_repeated_posInfo_codec);
      if (IsBulletBuff != false) {
        size += 1 + 1;
      }
      if (PlayerRotz != 0F) {
        size += 1 + 4;
      }
      if (WeaponType != global::Google.Protobuf.Protocol.WeaponType.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) WeaponType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_Skill other) {
      if (other == null) {
        return;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Google.Protobuf.Protocol.SkillInfo();
        }
        Info.MergeFrom(other.Info);
      }
      dirVector_.Add(other.dirVector_);
      if (other.stat_ != null) {
        if (stat_ == null) {
          Stat = new global::Google.Protobuf.Protocol.Stat();
        }
        Stat.MergeFrom(other.Stat);
      }
      posInfo_.Add(other.posInfo_);
      if (other.IsBulletBuff != false) {
        IsBulletBuff = other.IsBulletBuff;
      }
      if (other.PlayerRotz != 0F) {
        PlayerRotz = other.PlayerRotz;
      }
      if (other.WeaponType != global::Google.Protobuf.Protocol.WeaponType.Default) {
        WeaponType = other.WeaponType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::Google.Protobuf.Protocol.SkillInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 18: {
            dirVector_.AddEntriesFrom(input, _repeated_dirVector_codec);
            break;
          }
          case 26: {
            if (stat_ == null) {
              Stat = new global::Google.Protobuf.Protocol.Stat();
            }
            input.ReadMessage(Stat);
            break;
          }
          case 34: {
            posInfo_.AddEntriesFrom(input, _repeated_posInfo_codec);
            break;
          }
          case 40: {
            IsBulletBuff = input.ReadBool();
            break;
          }
          case 53: {
            PlayerRotz = input.ReadFloat();
            break;
          }
          case 56: {
            WeaponType = (global::Google.Protobuf.Protocol.WeaponType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_Skill : pb::IMessage<S_Skill> {
    private static readonly pb::MessageParser<S_Skill> _parser = new pb::MessageParser<S_Skill>(() => new S_Skill());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_Skill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Skill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Skill(S_Skill other) : this() {
      objectId_ = other.objectId_;
      info_ = other.info_ != null ? other.info_.Clone() : null;
      state_ = other.state_;
      posInfo_ = other.posInfo_.Clone();
      playerRotz_ = other.playerRotz_;
      weaponType_ = other.weaponType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Skill Clone() {
      return new S_Skill(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 2;
    private global::Google.Protobuf.Protocol.SkillInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.SkillInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private global::Google.Protobuf.Protocol.CreatureState state_ = global::Google.Protobuf.Protocol.CreatureState.Idle;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.CreatureState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "posInfo" field.</summary>
    public const int PosInfoFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Protobuf.Protocol.PositionInfo> _repeated_posInfo_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Protobuf.Protocol.PositionInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.Protocol.PositionInfo> posInfo_ = new pbc::RepeatedField<global::Google.Protobuf.Protocol.PositionInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.Protocol.PositionInfo> PosInfo {
      get { return posInfo_; }
    }

    /// <summary>Field number for the "playerRotz" field.</summary>
    public const int PlayerRotzFieldNumber = 5;
    private float playerRotz_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PlayerRotz {
      get { return playerRotz_; }
      set {
        playerRotz_ = value;
      }
    }

    /// <summary>Field number for the "weaponType" field.</summary>
    public const int WeaponTypeFieldNumber = 6;
    private global::Google.Protobuf.Protocol.WeaponType weaponType_ = global::Google.Protobuf.Protocol.WeaponType.Default;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.WeaponType WeaponType {
      get { return weaponType_; }
      set {
        weaponType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_Skill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_Skill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      if (!object.Equals(Info, other.Info)) return false;
      if (State != other.State) return false;
      if(!posInfo_.Equals(other.posInfo_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PlayerRotz, other.PlayerRotz)) return false;
      if (WeaponType != other.WeaponType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      if (State != global::Google.Protobuf.Protocol.CreatureState.Idle) hash ^= State.GetHashCode();
      hash ^= posInfo_.GetHashCode();
      if (PlayerRotz != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PlayerRotz);
      if (WeaponType != global::Google.Protobuf.Protocol.WeaponType.Default) hash ^= WeaponType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ObjectId);
      }
      if (info_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Info);
      }
      if (State != global::Google.Protobuf.Protocol.CreatureState.Idle) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      posInfo_.WriteTo(output, _repeated_posInfo_codec);
      if (PlayerRotz != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(PlayerRotz);
      }
      if (WeaponType != global::Google.Protobuf.Protocol.WeaponType.Default) {
        output.WriteRawTag(48);
        output.WriteEnum((int) WeaponType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (State != global::Google.Protobuf.Protocol.CreatureState.Idle) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      size += posInfo_.CalculateSize(_repeated_posInfo_codec);
      if (PlayerRotz != 0F) {
        size += 1 + 4;
      }
      if (WeaponType != global::Google.Protobuf.Protocol.WeaponType.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) WeaponType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_Skill other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Google.Protobuf.Protocol.SkillInfo();
        }
        Info.MergeFrom(other.Info);
      }
      if (other.State != global::Google.Protobuf.Protocol.CreatureState.Idle) {
        State = other.State;
      }
      posInfo_.Add(other.posInfo_);
      if (other.PlayerRotz != 0F) {
        PlayerRotz = other.PlayerRotz;
      }
      if (other.WeaponType != global::Google.Protobuf.Protocol.WeaponType.Default) {
        WeaponType = other.WeaponType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadInt32();
            break;
          }
          case 18: {
            if (info_ == null) {
              Info = new global::Google.Protobuf.Protocol.SkillInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 24: {
            State = (global::Google.Protobuf.Protocol.CreatureState) input.ReadEnum();
            break;
          }
          case 34: {
            posInfo_.AddEntriesFrom(input, _repeated_posInfo_codec);
            break;
          }
          case 45: {
            PlayerRotz = input.ReadFloat();
            break;
          }
          case 48: {
            WeaponType = (global::Google.Protobuf.Protocol.WeaponType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_HitPlayer : pb::IMessage<C_HitPlayer> {
    private static readonly pb::MessageParser<C_HitPlayer> _parser = new pb::MessageParser<C_HitPlayer>(() => new C_HitPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_HitPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_HitPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_HitPlayer(C_HitPlayer other) : this() {
      hitterObjectInfo_ = other.hitterObjectInfo_ != null ? other.hitterObjectInfo_.Clone() : null;
      enemyObjectInfo_ = other.enemyObjectInfo_ != null ? other.enemyObjectInfo_.Clone() : null;
      bulletId_ = other.bulletId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_HitPlayer Clone() {
      return new C_HitPlayer(this);
    }

    /// <summary>Field number for the "hitterObjectInfo" field.</summary>
    public const int HitterObjectInfoFieldNumber = 1;
    private global::Google.Protobuf.Protocol.ObjectInfo hitterObjectInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.ObjectInfo HitterObjectInfo {
      get { return hitterObjectInfo_; }
      set {
        hitterObjectInfo_ = value;
      }
    }

    /// <summary>Field number for the "enemyObjectInfo" field.</summary>
    public const int EnemyObjectInfoFieldNumber = 2;
    private global::Google.Protobuf.Protocol.ObjectInfo enemyObjectInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.ObjectInfo EnemyObjectInfo {
      get { return enemyObjectInfo_; }
      set {
        enemyObjectInfo_ = value;
      }
    }

    /// <summary>Field number for the "bulletId" field.</summary>
    public const int BulletIdFieldNumber = 3;
    private int bulletId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BulletId {
      get { return bulletId_; }
      set {
        bulletId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_HitPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_HitPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(HitterObjectInfo, other.HitterObjectInfo)) return false;
      if (!object.Equals(EnemyObjectInfo, other.EnemyObjectInfo)) return false;
      if (BulletId != other.BulletId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hitterObjectInfo_ != null) hash ^= HitterObjectInfo.GetHashCode();
      if (enemyObjectInfo_ != null) hash ^= EnemyObjectInfo.GetHashCode();
      if (BulletId != 0) hash ^= BulletId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hitterObjectInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(HitterObjectInfo);
      }
      if (enemyObjectInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EnemyObjectInfo);
      }
      if (BulletId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BulletId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hitterObjectInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HitterObjectInfo);
      }
      if (enemyObjectInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnemyObjectInfo);
      }
      if (BulletId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BulletId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_HitPlayer other) {
      if (other == null) {
        return;
      }
      if (other.hitterObjectInfo_ != null) {
        if (hitterObjectInfo_ == null) {
          HitterObjectInfo = new global::Google.Protobuf.Protocol.ObjectInfo();
        }
        HitterObjectInfo.MergeFrom(other.HitterObjectInfo);
      }
      if (other.enemyObjectInfo_ != null) {
        if (enemyObjectInfo_ == null) {
          EnemyObjectInfo = new global::Google.Protobuf.Protocol.ObjectInfo();
        }
        EnemyObjectInfo.MergeFrom(other.EnemyObjectInfo);
      }
      if (other.BulletId != 0) {
        BulletId = other.BulletId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hitterObjectInfo_ == null) {
              HitterObjectInfo = new global::Google.Protobuf.Protocol.ObjectInfo();
            }
            input.ReadMessage(HitterObjectInfo);
            break;
          }
          case 18: {
            if (enemyObjectInfo_ == null) {
              EnemyObjectInfo = new global::Google.Protobuf.Protocol.ObjectInfo();
            }
            input.ReadMessage(EnemyObjectInfo);
            break;
          }
          case 24: {
            BulletId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_HitPlayer : pb::IMessage<S_HitPlayer> {
    private static readonly pb::MessageParser<S_HitPlayer> _parser = new pb::MessageParser<S_HitPlayer>(() => new S_HitPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_HitPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_HitPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_HitPlayer(S_HitPlayer other) : this() {
      clientId_ = other.clientId_;
      hitterObjectInfo_ = other.hitterObjectInfo_ != null ? other.hitterObjectInfo_.Clone() : null;
      enemyObjectInfo_ = other.enemyObjectInfo_ != null ? other.enemyObjectInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_HitPlayer Clone() {
      return new S_HitPlayer(this);
    }

    /// <summary>Field number for the "clientId" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private int clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ClientId {
      get { return clientId_; }
      set {
        clientId_ = value;
      }
    }

    /// <summary>Field number for the "hitterObjectInfo" field.</summary>
    public const int HitterObjectInfoFieldNumber = 2;
    private global::Google.Protobuf.Protocol.ObjectInfo hitterObjectInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.ObjectInfo HitterObjectInfo {
      get { return hitterObjectInfo_; }
      set {
        hitterObjectInfo_ = value;
      }
    }

    /// <summary>Field number for the "enemyObjectInfo" field.</summary>
    public const int EnemyObjectInfoFieldNumber = 3;
    private global::Google.Protobuf.Protocol.ObjectInfo enemyObjectInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.ObjectInfo EnemyObjectInfo {
      get { return enemyObjectInfo_; }
      set {
        enemyObjectInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_HitPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_HitPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (!object.Equals(HitterObjectInfo, other.HitterObjectInfo)) return false;
      if (!object.Equals(EnemyObjectInfo, other.EnemyObjectInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId != 0) hash ^= ClientId.GetHashCode();
      if (hitterObjectInfo_ != null) hash ^= HitterObjectInfo.GetHashCode();
      if (enemyObjectInfo_ != null) hash ^= EnemyObjectInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ClientId);
      }
      if (hitterObjectInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(HitterObjectInfo);
      }
      if (enemyObjectInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EnemyObjectInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientId);
      }
      if (hitterObjectInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HitterObjectInfo);
      }
      if (enemyObjectInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnemyObjectInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_HitPlayer other) {
      if (other == null) {
        return;
      }
      if (other.ClientId != 0) {
        ClientId = other.ClientId;
      }
      if (other.hitterObjectInfo_ != null) {
        if (hitterObjectInfo_ == null) {
          HitterObjectInfo = new global::Google.Protobuf.Protocol.ObjectInfo();
        }
        HitterObjectInfo.MergeFrom(other.HitterObjectInfo);
      }
      if (other.enemyObjectInfo_ != null) {
        if (enemyObjectInfo_ == null) {
          EnemyObjectInfo = new global::Google.Protobuf.Protocol.ObjectInfo();
        }
        EnemyObjectInfo.MergeFrom(other.EnemyObjectInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientId = input.ReadInt32();
            break;
          }
          case 18: {
            if (hitterObjectInfo_ == null) {
              HitterObjectInfo = new global::Google.Protobuf.Protocol.ObjectInfo();
            }
            input.ReadMessage(HitterObjectInfo);
            break;
          }
          case 26: {
            if (enemyObjectInfo_ == null) {
              EnemyObjectInfo = new global::Google.Protobuf.Protocol.ObjectInfo();
            }
            input.ReadMessage(EnemyObjectInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_HitMonster : pb::IMessage<C_HitMonster> {
    private static readonly pb::MessageParser<C_HitMonster> _parser = new pb::MessageParser<C_HitMonster>(() => new C_HitMonster());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_HitMonster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_HitMonster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_HitMonster(C_HitMonster other) : this() {
      hitterObjectInfo_ = other.hitterObjectInfo_ != null ? other.hitterObjectInfo_.Clone() : null;
      enemyObjectInfo_ = other.enemyObjectInfo_ != null ? other.enemyObjectInfo_.Clone() : null;
      bulletId_ = other.bulletId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_HitMonster Clone() {
      return new C_HitMonster(this);
    }

    /// <summary>Field number for the "hitterObjectInfo" field.</summary>
    public const int HitterObjectInfoFieldNumber = 1;
    private global::Google.Protobuf.Protocol.ObjectInfo hitterObjectInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.ObjectInfo HitterObjectInfo {
      get { return hitterObjectInfo_; }
      set {
        hitterObjectInfo_ = value;
      }
    }

    /// <summary>Field number for the "enemyObjectInfo" field.</summary>
    public const int EnemyObjectInfoFieldNumber = 2;
    private global::Google.Protobuf.Protocol.ObjectInfo enemyObjectInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.ObjectInfo EnemyObjectInfo {
      get { return enemyObjectInfo_; }
      set {
        enemyObjectInfo_ = value;
      }
    }

    /// <summary>Field number for the "bulletId" field.</summary>
    public const int BulletIdFieldNumber = 3;
    private int bulletId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BulletId {
      get { return bulletId_; }
      set {
        bulletId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_HitMonster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_HitMonster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(HitterObjectInfo, other.HitterObjectInfo)) return false;
      if (!object.Equals(EnemyObjectInfo, other.EnemyObjectInfo)) return false;
      if (BulletId != other.BulletId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hitterObjectInfo_ != null) hash ^= HitterObjectInfo.GetHashCode();
      if (enemyObjectInfo_ != null) hash ^= EnemyObjectInfo.GetHashCode();
      if (BulletId != 0) hash ^= BulletId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hitterObjectInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(HitterObjectInfo);
      }
      if (enemyObjectInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EnemyObjectInfo);
      }
      if (BulletId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BulletId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hitterObjectInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HitterObjectInfo);
      }
      if (enemyObjectInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnemyObjectInfo);
      }
      if (BulletId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BulletId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_HitMonster other) {
      if (other == null) {
        return;
      }
      if (other.hitterObjectInfo_ != null) {
        if (hitterObjectInfo_ == null) {
          HitterObjectInfo = new global::Google.Protobuf.Protocol.ObjectInfo();
        }
        HitterObjectInfo.MergeFrom(other.HitterObjectInfo);
      }
      if (other.enemyObjectInfo_ != null) {
        if (enemyObjectInfo_ == null) {
          EnemyObjectInfo = new global::Google.Protobuf.Protocol.ObjectInfo();
        }
        EnemyObjectInfo.MergeFrom(other.EnemyObjectInfo);
      }
      if (other.BulletId != 0) {
        BulletId = other.BulletId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hitterObjectInfo_ == null) {
              HitterObjectInfo = new global::Google.Protobuf.Protocol.ObjectInfo();
            }
            input.ReadMessage(HitterObjectInfo);
            break;
          }
          case 18: {
            if (enemyObjectInfo_ == null) {
              EnemyObjectInfo = new global::Google.Protobuf.Protocol.ObjectInfo();
            }
            input.ReadMessage(EnemyObjectInfo);
            break;
          }
          case 24: {
            BulletId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_HitMonster : pb::IMessage<S_HitMonster> {
    private static readonly pb::MessageParser<S_HitMonster> _parser = new pb::MessageParser<S_HitMonster>(() => new S_HitMonster());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_HitMonster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_HitMonster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_HitMonster(S_HitMonster other) : this() {
      hitterObjectInfo_ = other.hitterObjectInfo_ != null ? other.hitterObjectInfo_.Clone() : null;
      enemyObjectInfo_ = other.enemyObjectInfo_ != null ? other.enemyObjectInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_HitMonster Clone() {
      return new S_HitMonster(this);
    }

    /// <summary>Field number for the "hitterObjectInfo" field.</summary>
    public const int HitterObjectInfoFieldNumber = 1;
    private global::Google.Protobuf.Protocol.ObjectInfo hitterObjectInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.ObjectInfo HitterObjectInfo {
      get { return hitterObjectInfo_; }
      set {
        hitterObjectInfo_ = value;
      }
    }

    /// <summary>Field number for the "enemyObjectInfo" field.</summary>
    public const int EnemyObjectInfoFieldNumber = 2;
    private global::Google.Protobuf.Protocol.ObjectInfo enemyObjectInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.ObjectInfo EnemyObjectInfo {
      get { return enemyObjectInfo_; }
      set {
        enemyObjectInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_HitMonster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_HitMonster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(HitterObjectInfo, other.HitterObjectInfo)) return false;
      if (!object.Equals(EnemyObjectInfo, other.EnemyObjectInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hitterObjectInfo_ != null) hash ^= HitterObjectInfo.GetHashCode();
      if (enemyObjectInfo_ != null) hash ^= EnemyObjectInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hitterObjectInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(HitterObjectInfo);
      }
      if (enemyObjectInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EnemyObjectInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hitterObjectInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HitterObjectInfo);
      }
      if (enemyObjectInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnemyObjectInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_HitMonster other) {
      if (other == null) {
        return;
      }
      if (other.hitterObjectInfo_ != null) {
        if (hitterObjectInfo_ == null) {
          HitterObjectInfo = new global::Google.Protobuf.Protocol.ObjectInfo();
        }
        HitterObjectInfo.MergeFrom(other.HitterObjectInfo);
      }
      if (other.enemyObjectInfo_ != null) {
        if (enemyObjectInfo_ == null) {
          EnemyObjectInfo = new global::Google.Protobuf.Protocol.ObjectInfo();
        }
        EnemyObjectInfo.MergeFrom(other.EnemyObjectInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hitterObjectInfo_ == null) {
              HitterObjectInfo = new global::Google.Protobuf.Protocol.ObjectInfo();
            }
            input.ReadMessage(HitterObjectInfo);
            break;
          }
          case 18: {
            if (enemyObjectInfo_ == null) {
              EnemyObjectInfo = new global::Google.Protobuf.Protocol.ObjectInfo();
            }
            input.ReadMessage(EnemyObjectInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_FindPlayer : pb::IMessage<S_FindPlayer> {
    private static readonly pb::MessageParser<S_FindPlayer> _parser = new pb::MessageParser<S_FindPlayer>(() => new S_FindPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_FindPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_FindPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_FindPlayer(S_FindPlayer other) : this() {
      monsterId_ = other.monsterId_;
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_FindPlayer Clone() {
      return new S_FindPlayer(this);
    }

    /// <summary>Field number for the "monsterId" field.</summary>
    public const int MonsterIdFieldNumber = 1;
    private int monsterId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MonsterId {
      get { return monsterId_; }
      set {
        monsterId_ = value;
      }
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_FindPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_FindPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MonsterId != other.MonsterId) return false;
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MonsterId != 0) hash ^= MonsterId.GetHashCode();
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MonsterId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MonsterId);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MonsterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MonsterId);
      }
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_FindPlayer other) {
      if (other == null) {
        return;
      }
      if (other.MonsterId != 0) {
        MonsterId = other.MonsterId;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MonsterId = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_ChangeHp : pb::IMessage<S_ChangeHp> {
    private static readonly pb::MessageParser<S_ChangeHp> _parser = new pb::MessageParser<S_ChangeHp>(() => new S_ChangeHp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_ChangeHp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeHp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeHp(S_ChangeHp other) : this() {
      objectId_ = other.objectId_;
      hp_ = other.hp_;
      isBuff_ = other.isBuff_;
      buffId_ = other.buffId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeHp Clone() {
      return new S_ChangeHp(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 2;
    private float hp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "isBuff" field.</summary>
    public const int IsBuffFieldNumber = 3;
    private bool isBuff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBuff {
      get { return isBuff_; }
      set {
        isBuff_ = value;
      }
    }

    /// <summary>Field number for the "buffId" field.</summary>
    public const int BuffIdFieldNumber = 4;
    private int buffId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuffId {
      get { return buffId_; }
      set {
        buffId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_ChangeHp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_ChangeHp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Hp, other.Hp)) return false;
      if (IsBuff != other.IsBuff) return false;
      if (BuffId != other.BuffId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (Hp != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Hp);
      if (IsBuff != false) hash ^= IsBuff.GetHashCode();
      if (BuffId != 0) hash ^= BuffId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ObjectId);
      }
      if (Hp != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Hp);
      }
      if (IsBuff != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsBuff);
      }
      if (BuffId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BuffId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (Hp != 0F) {
        size += 1 + 4;
      }
      if (IsBuff != false) {
        size += 1 + 1;
      }
      if (BuffId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuffId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_ChangeHp other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.Hp != 0F) {
        Hp = other.Hp;
      }
      if (other.IsBuff != false) {
        IsBuff = other.IsBuff;
      }
      if (other.BuffId != 0) {
        BuffId = other.BuffId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadInt32();
            break;
          }
          case 21: {
            Hp = input.ReadFloat();
            break;
          }
          case 24: {
            IsBuff = input.ReadBool();
            break;
          }
          case 32: {
            BuffId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_Die : pb::IMessage<S_Die> {
    private static readonly pb::MessageParser<S_Die> _parser = new pb::MessageParser<S_Die>(() => new S_Die());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_Die> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Die() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Die(S_Die other) : this() {
      objectId_ = other.objectId_;
      hitterId_ = other.hitterId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Die Clone() {
      return new S_Die(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "hitterId" field.</summary>
    public const int HitterIdFieldNumber = 2;
    private int hitterId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HitterId {
      get { return hitterId_; }
      set {
        hitterId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_Die);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_Die other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      if (HitterId != other.HitterId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (HitterId != 0) hash ^= HitterId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ObjectId);
      }
      if (HitterId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(HitterId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (HitterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HitterId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_Die other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.HitterId != 0) {
        HitterId = other.HitterId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadInt32();
            break;
          }
          case 16: {
            HitterId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_EnterRoom : pb::IMessage<C_EnterRoom> {
    private static readonly pb::MessageParser<C_EnterRoom> _parser = new pb::MessageParser<C_EnterRoom>(() => new C_EnterRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_EnterRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_EnterRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_EnterRoom(C_EnterRoom other) : this() {
      canEnter_ = other.canEnter_;
      weaponType_ = other.weaponType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_EnterRoom Clone() {
      return new C_EnterRoom(this);
    }

    /// <summary>Field number for the "canEnter" field.</summary>
    public const int CanEnterFieldNumber = 1;
    private bool canEnter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanEnter {
      get { return canEnter_; }
      set {
        canEnter_ = value;
      }
    }

    /// <summary>Field number for the "weaponType" field.</summary>
    public const int WeaponTypeFieldNumber = 2;
    private global::Google.Protobuf.Protocol.WeaponType weaponType_ = global::Google.Protobuf.Protocol.WeaponType.Default;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.WeaponType WeaponType {
      get { return weaponType_; }
      set {
        weaponType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_EnterRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_EnterRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CanEnter != other.CanEnter) return false;
      if (WeaponType != other.WeaponType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CanEnter != false) hash ^= CanEnter.GetHashCode();
      if (WeaponType != global::Google.Protobuf.Protocol.WeaponType.Default) hash ^= WeaponType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CanEnter != false) {
        output.WriteRawTag(8);
        output.WriteBool(CanEnter);
      }
      if (WeaponType != global::Google.Protobuf.Protocol.WeaponType.Default) {
        output.WriteRawTag(16);
        output.WriteEnum((int) WeaponType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CanEnter != false) {
        size += 1 + 1;
      }
      if (WeaponType != global::Google.Protobuf.Protocol.WeaponType.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) WeaponType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_EnterRoom other) {
      if (other == null) {
        return;
      }
      if (other.CanEnter != false) {
        CanEnter = other.CanEnter;
      }
      if (other.WeaponType != global::Google.Protobuf.Protocol.WeaponType.Default) {
        WeaponType = other.WeaponType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CanEnter = input.ReadBool();
            break;
          }
          case 16: {
            WeaponType = (global::Google.Protobuf.Protocol.WeaponType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_EnterRoom : pb::IMessage<S_EnterRoom> {
    private static readonly pb::MessageParser<S_EnterRoom> _parser = new pb::MessageParser<S_EnterRoom>(() => new S_EnterRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_EnterRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_EnterRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_EnterRoom(S_EnterRoom other) : this() {
      canEnter_ = other.canEnter_;
      playerCount_ = other.playerCount_;
      maxPlayer_ = other.maxPlayer_;
      delayBeforeStartGame_ = other.delayBeforeStartGame_;
      packetTick_ = other.packetTick_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_EnterRoom Clone() {
      return new S_EnterRoom(this);
    }

    /// <summary>Field number for the "canEnter" field.</summary>
    public const int CanEnterFieldNumber = 1;
    private bool canEnter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanEnter {
      get { return canEnter_; }
      set {
        canEnter_ = value;
      }
    }

    /// <summary>Field number for the "playerCount" field.</summary>
    public const int PlayerCountFieldNumber = 2;
    private int playerCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerCount {
      get { return playerCount_; }
      set {
        playerCount_ = value;
      }
    }

    /// <summary>Field number for the "maxPlayer" field.</summary>
    public const int MaxPlayerFieldNumber = 3;
    private int maxPlayer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxPlayer {
      get { return maxPlayer_; }
      set {
        maxPlayer_ = value;
      }
    }

    /// <summary>Field number for the "delayBeforeStartGame" field.</summary>
    public const int DelayBeforeStartGameFieldNumber = 4;
    private int delayBeforeStartGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DelayBeforeStartGame {
      get { return delayBeforeStartGame_; }
      set {
        delayBeforeStartGame_ = value;
      }
    }

    /// <summary>Field number for the "packetTick" field.</summary>
    public const int PacketTickFieldNumber = 5;
    private float packetTick_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PacketTick {
      get { return packetTick_; }
      set {
        packetTick_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_EnterRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_EnterRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CanEnter != other.CanEnter) return false;
      if (PlayerCount != other.PlayerCount) return false;
      if (MaxPlayer != other.MaxPlayer) return false;
      if (DelayBeforeStartGame != other.DelayBeforeStartGame) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PacketTick, other.PacketTick)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CanEnter != false) hash ^= CanEnter.GetHashCode();
      if (PlayerCount != 0) hash ^= PlayerCount.GetHashCode();
      if (MaxPlayer != 0) hash ^= MaxPlayer.GetHashCode();
      if (DelayBeforeStartGame != 0) hash ^= DelayBeforeStartGame.GetHashCode();
      if (PacketTick != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PacketTick);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CanEnter != false) {
        output.WriteRawTag(8);
        output.WriteBool(CanEnter);
      }
      if (PlayerCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerCount);
      }
      if (MaxPlayer != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxPlayer);
      }
      if (DelayBeforeStartGame != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DelayBeforeStartGame);
      }
      if (PacketTick != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(PacketTick);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CanEnter != false) {
        size += 1 + 1;
      }
      if (PlayerCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerCount);
      }
      if (MaxPlayer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPlayer);
      }
      if (DelayBeforeStartGame != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DelayBeforeStartGame);
      }
      if (PacketTick != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_EnterRoom other) {
      if (other == null) {
        return;
      }
      if (other.CanEnter != false) {
        CanEnter = other.CanEnter;
      }
      if (other.PlayerCount != 0) {
        PlayerCount = other.PlayerCount;
      }
      if (other.MaxPlayer != 0) {
        MaxPlayer = other.MaxPlayer;
      }
      if (other.DelayBeforeStartGame != 0) {
        DelayBeforeStartGame = other.DelayBeforeStartGame;
      }
      if (other.PacketTick != 0F) {
        PacketTick = other.PacketTick;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CanEnter = input.ReadBool();
            break;
          }
          case 16: {
            PlayerCount = input.ReadInt32();
            break;
          }
          case 24: {
            MaxPlayer = input.ReadInt32();
            break;
          }
          case 32: {
            DelayBeforeStartGame = input.ReadInt32();
            break;
          }
          case 45: {
            PacketTick = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_StartGame : pb::IMessage<S_StartGame> {
    private static readonly pb::MessageParser<S_StartGame> _parser = new pb::MessageParser<S_StartGame>(() => new S_StartGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_StartGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_StartGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_StartGame(S_StartGame other) : this() {
      isStartGame_ = other.isStartGame_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_StartGame Clone() {
      return new S_StartGame(this);
    }

    /// <summary>Field number for the "isStartGame" field.</summary>
    public const int IsStartGameFieldNumber = 1;
    private bool isStartGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsStartGame {
      get { return isStartGame_; }
      set {
        isStartGame_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_StartGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_StartGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsStartGame != other.IsStartGame) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsStartGame != false) hash ^= IsStartGame.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsStartGame != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsStartGame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsStartGame != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_StartGame other) {
      if (other == null) {
        return;
      }
      if (other.IsStartGame != false) {
        IsStartGame = other.IsStartGame;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsStartGame = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_LeaveGame : pb::IMessage<C_LeaveGame> {
    private static readonly pb::MessageParser<C_LeaveGame> _parser = new pb::MessageParser<C_LeaveGame>(() => new C_LeaveGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_LeaveGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_LeaveGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_LeaveGame(C_LeaveGame other) : this() {
      leaveGame_ = other.leaveGame_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_LeaveGame Clone() {
      return new C_LeaveGame(this);
    }

    /// <summary>Field number for the "leaveGame" field.</summary>
    public const int LeaveGameFieldNumber = 1;
    private bool leaveGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool LeaveGame {
      get { return leaveGame_; }
      set {
        leaveGame_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_LeaveGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_LeaveGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LeaveGame != other.LeaveGame) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LeaveGame != false) hash ^= LeaveGame.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LeaveGame != false) {
        output.WriteRawTag(8);
        output.WriteBool(LeaveGame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LeaveGame != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_LeaveGame other) {
      if (other == null) {
        return;
      }
      if (other.LeaveGame != false) {
        LeaveGame = other.LeaveGame;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LeaveGame = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_LeaveRoom : pb::IMessage<S_LeaveRoom> {
    private static readonly pb::MessageParser<S_LeaveRoom> _parser = new pb::MessageParser<S_LeaveRoom>(() => new S_LeaveRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_LeaveRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_LeaveRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_LeaveRoom(S_LeaveRoom other) : this() {
      playerCount_ = other.playerCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_LeaveRoom Clone() {
      return new S_LeaveRoom(this);
    }

    /// <summary>Field number for the "playerCount" field.</summary>
    public const int PlayerCountFieldNumber = 1;
    private int playerCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerCount {
      get { return playerCount_; }
      set {
        playerCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_LeaveRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_LeaveRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerCount != other.PlayerCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerCount != 0) hash ^= PlayerCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_LeaveRoom other) {
      if (other == null) {
        return;
      }
      if (other.PlayerCount != 0) {
        PlayerCount = other.PlayerCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_EndGame : pb::IMessage<S_EndGame> {
    private static readonly pb::MessageParser<S_EndGame> _parser = new pb::MessageParser<S_EndGame>(() => new S_EndGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_EndGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_EndGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_EndGame(S_EndGame other) : this() {
      isGameEnd_ = other.isGameEnd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_EndGame Clone() {
      return new S_EndGame(this);
    }

    /// <summary>Field number for the "isGameEnd" field.</summary>
    public const int IsGameEndFieldNumber = 1;
    private bool isGameEnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGameEnd {
      get { return isGameEnd_; }
      set {
        isGameEnd_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_EndGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_EndGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsGameEnd != other.IsGameEnd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsGameEnd != false) hash ^= IsGameEnd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsGameEnd != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsGameEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsGameEnd != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_EndGame other) {
      if (other == null) {
        return;
      }
      if (other.IsGameEnd != false) {
        IsGameEnd = other.IsGameEnd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsGameEnd = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_LevelUp : pb::IMessage<S_LevelUp> {
    private static readonly pb::MessageParser<S_LevelUp> _parser = new pb::MessageParser<S_LevelUp>(() => new S_LevelUp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_LevelUp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_LevelUp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_LevelUp(S_LevelUp other) : this() {
      objectId_ = other.objectId_;
      exp_ = other.exp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_LevelUp Clone() {
      return new S_LevelUp(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "exp" field.</summary>
    public const int ExpFieldNumber = 2;
    private int exp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Exp {
      get { return exp_; }
      set {
        exp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_LevelUp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_LevelUp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      if (Exp != other.Exp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (Exp != 0) hash ^= Exp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ObjectId);
      }
      if (Exp != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Exp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (Exp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_LevelUp other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.Exp != 0) {
        Exp = other.Exp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadInt32();
            break;
          }
          case 16: {
            Exp = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_LevelUp : pb::IMessage<C_LevelUp> {
    private static readonly pb::MessageParser<C_LevelUp> _parser = new pb::MessageParser<C_LevelUp>(() => new C_LevelUp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_LevelUp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_LevelUp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_LevelUp(C_LevelUp other) : this() {
      exp_ = other.exp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_LevelUp Clone() {
      return new C_LevelUp(this);
    }

    /// <summary>Field number for the "exp" field.</summary>
    public const int ExpFieldNumber = 1;
    private int exp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Exp {
      get { return exp_; }
      set {
        exp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_LevelUp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_LevelUp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Exp != other.Exp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Exp != 0) hash ^= Exp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Exp != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Exp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Exp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_LevelUp other) {
      if (other == null) {
        return;
      }
      if (other.Exp != 0) {
        Exp = other.Exp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Exp = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_GetExp : pb::IMessage<S_GetExp> {
    private static readonly pb::MessageParser<S_GetExp> _parser = new pb::MessageParser<S_GetExp>(() => new S_GetExp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_GetExp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_GetExp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_GetExp(S_GetExp other) : this() {
      objectId_ = other.objectId_;
      exp_ = other.exp_;
      totalExp_ = other.totalExp_;
      level_ = other.level_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_GetExp Clone() {
      return new S_GetExp(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "exp" field.</summary>
    public const int ExpFieldNumber = 2;
    private int exp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Exp {
      get { return exp_; }
      set {
        exp_ = value;
      }
    }

    /// <summary>Field number for the "totalExp" field.</summary>
    public const int TotalExpFieldNumber = 3;
    private int totalExp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalExp {
      get { return totalExp_; }
      set {
        totalExp_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 4;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_GetExp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_GetExp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      if (Exp != other.Exp) return false;
      if (TotalExp != other.TotalExp) return false;
      if (Level != other.Level) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (Exp != 0) hash ^= Exp.GetHashCode();
      if (TotalExp != 0) hash ^= TotalExp.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ObjectId);
      }
      if (Exp != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Exp);
      }
      if (TotalExp != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalExp);
      }
      if (Level != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (Exp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
      }
      if (TotalExp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalExp);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_GetExp other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.Exp != 0) {
        Exp = other.Exp;
      }
      if (other.TotalExp != 0) {
        TotalExp = other.TotalExp;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadInt32();
            break;
          }
          case 16: {
            Exp = input.ReadInt32();
            break;
          }
          case 24: {
            TotalExp = input.ReadInt32();
            break;
          }
          case 32: {
            Level = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_GetExp : pb::IMessage<C_GetExp> {
    private static readonly pb::MessageParser<C_GetExp> _parser = new pb::MessageParser<C_GetExp>(() => new C_GetExp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_GetExp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_GetExp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_GetExp(C_GetExp other) : this() {
      exp_ = other.exp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_GetExp Clone() {
      return new C_GetExp(this);
    }

    /// <summary>Field number for the "exp" field.</summary>
    public const int ExpFieldNumber = 1;
    private int exp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Exp {
      get { return exp_; }
      set {
        exp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_GetExp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_GetExp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Exp != other.Exp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Exp != 0) hash ^= Exp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Exp != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Exp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Exp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_GetExp other) {
      if (other == null) {
        return;
      }
      if (other.Exp != 0) {
        Exp = other.Exp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Exp = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_ChangeStat : pb::IMessage<S_ChangeStat> {
    private static readonly pb::MessageParser<S_ChangeStat> _parser = new pb::MessageParser<S_ChangeStat>(() => new S_ChangeStat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_ChangeStat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeStat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeStat(S_ChangeStat other) : this() {
      objectId_ = other.objectId_;
      stat_ = other.stat_ != null ? other.stat_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeStat Clone() {
      return new S_ChangeStat(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "stat" field.</summary>
    public const int StatFieldNumber = 2;
    private global::Google.Protobuf.Protocol.Stat stat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.Stat Stat {
      get { return stat_; }
      set {
        stat_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_ChangeStat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_ChangeStat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      if (!object.Equals(Stat, other.Stat)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (stat_ != null) hash ^= Stat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ObjectId);
      }
      if (stat_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Stat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (stat_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_ChangeStat other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.stat_ != null) {
        if (stat_ == null) {
          Stat = new global::Google.Protobuf.Protocol.Stat();
        }
        Stat.MergeFrom(other.Stat);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadInt32();
            break;
          }
          case 18: {
            if (stat_ == null) {
              Stat = new global::Google.Protobuf.Protocol.Stat();
            }
            input.ReadMessage(Stat);
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_ChangeStat : pb::IMessage<C_ChangeStat> {
    private static readonly pb::MessageParser<C_ChangeStat> _parser = new pb::MessageParser<C_ChangeStat>(() => new C_ChangeStat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_ChangeStat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeStat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeStat(C_ChangeStat other) : this() {
      stat_ = other.stat_ != null ? other.stat_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeStat Clone() {
      return new C_ChangeStat(this);
    }

    /// <summary>Field number for the "stat" field.</summary>
    public const int StatFieldNumber = 1;
    private global::Google.Protobuf.Protocol.Stat stat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.Stat Stat {
      get { return stat_; }
      set {
        stat_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_ChangeStat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_ChangeStat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Stat, other.Stat)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (stat_ != null) hash ^= Stat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (stat_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Stat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (stat_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_ChangeStat other) {
      if (other == null) {
        return;
      }
      if (other.stat_ != null) {
        if (stat_ == null) {
          Stat = new global::Google.Protobuf.Protocol.Stat();
        }
        Stat.MergeFrom(other.Stat);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stat_ == null) {
              Stat = new global::Google.Protobuf.Protocol.Stat();
            }
            input.ReadMessage(Stat);
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_ChangeState : pb::IMessage<S_ChangeState> {
    private static readonly pb::MessageParser<S_ChangeState> _parser = new pb::MessageParser<S_ChangeState>(() => new S_ChangeState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_ChangeState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeState(S_ChangeState other) : this() {
      objectId_ = other.objectId_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeState Clone() {
      return new S_ChangeState(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::Google.Protobuf.Protocol.CreatureState state_ = global::Google.Protobuf.Protocol.CreatureState.Idle;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.CreatureState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_ChangeState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_ChangeState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (State != global::Google.Protobuf.Protocol.CreatureState.Idle) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ObjectId);
      }
      if (State != global::Google.Protobuf.Protocol.CreatureState.Idle) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (State != global::Google.Protobuf.Protocol.CreatureState.Idle) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_ChangeState other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.State != global::Google.Protobuf.Protocol.CreatureState.Idle) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadInt32();
            break;
          }
          case 16: {
            State = (global::Google.Protobuf.Protocol.CreatureState) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_ChangeState : pb::IMessage<C_ChangeState> {
    private static readonly pb::MessageParser<C_ChangeState> _parser = new pb::MessageParser<C_ChangeState>(() => new C_ChangeState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_ChangeState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeState(C_ChangeState other) : this() {
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeState Clone() {
      return new C_ChangeState(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private global::Google.Protobuf.Protocol.CreatureState state_ = global::Google.Protobuf.Protocol.CreatureState.Idle;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.CreatureState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_ChangeState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_ChangeState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != global::Google.Protobuf.Protocol.CreatureState.Idle) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (State != global::Google.Protobuf.Protocol.CreatureState.Idle) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != global::Google.Protobuf.Protocol.CreatureState.Idle) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_ChangeState other) {
      if (other == null) {
        return;
      }
      if (other.State != global::Google.Protobuf.Protocol.CreatureState.Idle) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = (global::Google.Protobuf.Protocol.CreatureState) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_ChangeRotz : pb::IMessage<S_ChangeRotz> {
    private static readonly pb::MessageParser<S_ChangeRotz> _parser = new pb::MessageParser<S_ChangeRotz>(() => new S_ChangeRotz());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_ChangeRotz> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeRotz() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeRotz(S_ChangeRotz other) : this() {
      objectId_ = other.objectId_;
      rotZ_ = other.rotZ_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeRotz Clone() {
      return new S_ChangeRotz(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "rotZ" field.</summary>
    public const int RotZFieldNumber = 2;
    private float rotZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RotZ {
      get { return rotZ_; }
      set {
        rotZ_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_ChangeRotz);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_ChangeRotz other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotZ, other.RotZ)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (RotZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotZ);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ObjectId);
      }
      if (RotZ != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(RotZ);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (RotZ != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_ChangeRotz other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.RotZ != 0F) {
        RotZ = other.RotZ;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadInt32();
            break;
          }
          case 21: {
            RotZ = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_ChangeRotz : pb::IMessage<C_ChangeRotz> {
    private static readonly pb::MessageParser<C_ChangeRotz> _parser = new pb::MessageParser<C_ChangeRotz>(() => new C_ChangeRotz());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_ChangeRotz> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeRotz() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeRotz(C_ChangeRotz other) : this() {
      rotZ_ = other.rotZ_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeRotz Clone() {
      return new C_ChangeRotz(this);
    }

    /// <summary>Field number for the "rotZ" field.</summary>
    public const int RotZFieldNumber = 1;
    private float rotZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RotZ {
      get { return rotZ_; }
      set {
        rotZ_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_ChangeRotz);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_ChangeRotz other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotZ, other.RotZ)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RotZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotZ);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RotZ != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(RotZ);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RotZ != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_ChangeRotz other) {
      if (other == null) {
        return;
      }
      if (other.RotZ != 0F) {
        RotZ = other.RotZ;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            RotZ = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_OutGame : pb::IMessage<C_OutGame> {
    private static readonly pb::MessageParser<C_OutGame> _parser = new pb::MessageParser<C_OutGame>(() => new C_OutGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_OutGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_OutGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_OutGame(C_OutGame other) : this() {
      objectId_ = other.objectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_OutGame Clone() {
      return new C_OutGame(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_OutGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_OutGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ObjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_OutGame other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_CheckInfo : pb::IMessage<C_CheckInfo> {
    private static readonly pb::MessageParser<C_CheckInfo> _parser = new pb::MessageParser<C_CheckInfo>(() => new C_CheckInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_CheckInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_CheckInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_CheckInfo(C_CheckInfo other) : this() {
      id_ = other.id_;
      rotZ_ = other.rotZ_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_CheckInfo Clone() {
      return new C_CheckInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "rotZ" field.</summary>
    public const int RotZFieldNumber = 2;
    private float rotZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RotZ {
      get { return rotZ_; }
      set {
        rotZ_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_CheckInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_CheckInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotZ, other.RotZ)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (RotZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotZ);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RotZ != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(RotZ);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (RotZ != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_CheckInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.RotZ != 0F) {
        RotZ = other.RotZ;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 21: {
            RotZ = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_ChangeWeaponType : pb::IMessage<C_ChangeWeaponType> {
    private static readonly pb::MessageParser<C_ChangeWeaponType> _parser = new pb::MessageParser<C_ChangeWeaponType>(() => new C_ChangeWeaponType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_ChangeWeaponType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeWeaponType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeWeaponType(C_ChangeWeaponType other) : this() {
      weaponType_ = other.weaponType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeWeaponType Clone() {
      return new C_ChangeWeaponType(this);
    }

    /// <summary>Field number for the "weaponType" field.</summary>
    public const int WeaponTypeFieldNumber = 1;
    private global::Google.Protobuf.Protocol.WeaponType weaponType_ = global::Google.Protobuf.Protocol.WeaponType.Default;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.WeaponType WeaponType {
      get { return weaponType_; }
      set {
        weaponType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_ChangeWeaponType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_ChangeWeaponType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WeaponType != other.WeaponType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WeaponType != global::Google.Protobuf.Protocol.WeaponType.Default) hash ^= WeaponType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WeaponType != global::Google.Protobuf.Protocol.WeaponType.Default) {
        output.WriteRawTag(8);
        output.WriteEnum((int) WeaponType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WeaponType != global::Google.Protobuf.Protocol.WeaponType.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) WeaponType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_ChangeWeaponType other) {
      if (other == null) {
        return;
      }
      if (other.WeaponType != global::Google.Protobuf.Protocol.WeaponType.Default) {
        WeaponType = other.WeaponType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WeaponType = (global::Google.Protobuf.Protocol.WeaponType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_ChangeWeaponType : pb::IMessage<S_ChangeWeaponType> {
    private static readonly pb::MessageParser<S_ChangeWeaponType> _parser = new pb::MessageParser<S_ChangeWeaponType>(() => new S_ChangeWeaponType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_ChangeWeaponType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeWeaponType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeWeaponType(S_ChangeWeaponType other) : this() {
      objectId_ = other.objectId_;
      weaponType_ = other.weaponType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeWeaponType Clone() {
      return new S_ChangeWeaponType(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "weaponType" field.</summary>
    public const int WeaponTypeFieldNumber = 2;
    private global::Google.Protobuf.Protocol.WeaponType weaponType_ = global::Google.Protobuf.Protocol.WeaponType.Default;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.WeaponType WeaponType {
      get { return weaponType_; }
      set {
        weaponType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_ChangeWeaponType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_ChangeWeaponType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      if (WeaponType != other.WeaponType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (WeaponType != global::Google.Protobuf.Protocol.WeaponType.Default) hash ^= WeaponType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ObjectId);
      }
      if (WeaponType != global::Google.Protobuf.Protocol.WeaponType.Default) {
        output.WriteRawTag(16);
        output.WriteEnum((int) WeaponType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (WeaponType != global::Google.Protobuf.Protocol.WeaponType.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) WeaponType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_ChangeWeaponType other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.WeaponType != global::Google.Protobuf.Protocol.WeaponType.Default) {
        WeaponType = other.WeaponType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadInt32();
            break;
          }
          case 16: {
            WeaponType = (global::Google.Protobuf.Protocol.WeaponType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_PlaySound : pb::IMessage<C_PlaySound> {
    private static readonly pb::MessageParser<C_PlaySound> _parser = new pb::MessageParser<C_PlaySound>(() => new C_PlaySound());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_PlaySound> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_PlaySound() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_PlaySound(C_PlaySound other) : this() {
      path_ = other.path_;
      isNotPlayer_ = other.isNotPlayer_;
      notPlayerId_ = other.notPlayerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_PlaySound Clone() {
      return new C_PlaySound(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isNotPlayer" field.</summary>
    public const int IsNotPlayerFieldNumber = 2;
    private bool isNotPlayer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsNotPlayer {
      get { return isNotPlayer_; }
      set {
        isNotPlayer_ = value;
      }
    }

    /// <summary>Field number for the "notPlayerId" field.</summary>
    public const int NotPlayerIdFieldNumber = 3;
    private int notPlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NotPlayerId {
      get { return notPlayerId_; }
      set {
        notPlayerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_PlaySound);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_PlaySound other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if (IsNotPlayer != other.IsNotPlayer) return false;
      if (NotPlayerId != other.NotPlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (IsNotPlayer != false) hash ^= IsNotPlayer.GetHashCode();
      if (NotPlayerId != 0) hash ^= NotPlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (IsNotPlayer != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsNotPlayer);
      }
      if (NotPlayerId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NotPlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (IsNotPlayer != false) {
        size += 1 + 1;
      }
      if (NotPlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NotPlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_PlaySound other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.IsNotPlayer != false) {
        IsNotPlayer = other.IsNotPlayer;
      }
      if (other.NotPlayerId != 0) {
        NotPlayerId = other.NotPlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 16: {
            IsNotPlayer = input.ReadBool();
            break;
          }
          case 24: {
            NotPlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_PlaySound : pb::IMessage<S_PlaySound> {
    private static readonly pb::MessageParser<S_PlaySound> _parser = new pb::MessageParser<S_PlaySound>(() => new S_PlaySound());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_PlaySound> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_PlaySound() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_PlaySound(S_PlaySound other) : this() {
      path_ = other.path_;
      objectId_ = other.objectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_PlaySound Clone() {
      return new S_PlaySound(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 2;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_PlaySound);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_PlaySound other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if (ObjectId != other.ObjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (ObjectId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ObjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_PlaySound other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 16: {
            ObjectId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_CountTime : pb::IMessage<S_CountTime> {
    private static readonly pb::MessageParser<S_CountTime> _parser = new pb::MessageParser<S_CountTime>(() => new S_CountTime());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_CountTime> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_CountTime() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_CountTime(S_CountTime other) : this() {
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_CountTime Clone() {
      return new S_CountTime(this);
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 1;
    private int time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_CountTime);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_CountTime other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Time != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Time != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_CountTime other) {
      if (other == null) {
        return;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Time = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_ChangeGold : pb::IMessage<C_ChangeGold> {
    private static readonly pb::MessageParser<C_ChangeGold> _parser = new pb::MessageParser<C_ChangeGold>(() => new C_ChangeGold());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_ChangeGold> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeGold() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeGold(C_ChangeGold other) : this() {
      gold_ = other.gold_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeGold Clone() {
      return new C_ChangeGold(this);
    }

    /// <summary>Field number for the "gold" field.</summary>
    public const int GoldFieldNumber = 1;
    private int gold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_ChangeGold);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_ChangeGold other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gold != other.Gold) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Gold != 0) hash ^= Gold.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Gold != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Gold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Gold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gold);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_ChangeGold other) {
      if (other == null) {
        return;
      }
      if (other.Gold != 0) {
        Gold = other.Gold;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Gold = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_ChangeGold : pb::IMessage<S_ChangeGold> {
    private static readonly pb::MessageParser<S_ChangeGold> _parser = new pb::MessageParser<S_ChangeGold>(() => new S_ChangeGold());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_ChangeGold> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeGold() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeGold(S_ChangeGold other) : this() {
      gold_ = other.gold_;
      objectId_ = other.objectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeGold Clone() {
      return new S_ChangeGold(this);
    }

    /// <summary>Field number for the "gold" field.</summary>
    public const int GoldFieldNumber = 1;
    private int gold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 2;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_ChangeGold);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_ChangeGold other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gold != other.Gold) return false;
      if (ObjectId != other.ObjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Gold != 0) hash ^= Gold.GetHashCode();
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Gold != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Gold);
      }
      if (ObjectId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ObjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Gold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gold);
      }
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_ChangeGold other) {
      if (other == null) {
        return;
      }
      if (other.Gold != 0) {
        Gold = other.Gold;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Gold = input.ReadInt32();
            break;
          }
          case 16: {
            ObjectId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_UseTeleport : pb::IMessage<C_UseTeleport> {
    private static readonly pb::MessageParser<C_UseTeleport> _parser = new pb::MessageParser<C_UseTeleport>(() => new C_UseTeleport());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_UseTeleport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_UseTeleport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_UseTeleport(C_UseTeleport other) : this() {
      posInfo_ = other.posInfo_ != null ? other.posInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_UseTeleport Clone() {
      return new C_UseTeleport(this);
    }

    /// <summary>Field number for the "posInfo" field.</summary>
    public const int PosInfoFieldNumber = 1;
    private global::Google.Protobuf.Protocol.PositionInfo posInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.PositionInfo PosInfo {
      get { return posInfo_; }
      set {
        posInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_UseTeleport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_UseTeleport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PosInfo, other.PosInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (posInfo_ != null) hash ^= PosInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (posInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PosInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (posInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PosInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_UseTeleport other) {
      if (other == null) {
        return;
      }
      if (other.posInfo_ != null) {
        if (posInfo_ == null) {
          PosInfo = new global::Google.Protobuf.Protocol.PositionInfo();
        }
        PosInfo.MergeFrom(other.PosInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (posInfo_ == null) {
              PosInfo = new global::Google.Protobuf.Protocol.PositionInfo();
            }
            input.ReadMessage(PosInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_UseTeleport : pb::IMessage<S_UseTeleport> {
    private static readonly pb::MessageParser<S_UseTeleport> _parser = new pb::MessageParser<S_UseTeleport>(() => new S_UseTeleport());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_UseTeleport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_UseTeleport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_UseTeleport(S_UseTeleport other) : this() {
      posInfo_ = other.posInfo_ != null ? other.posInfo_.Clone() : null;
      objectId_ = other.objectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_UseTeleport Clone() {
      return new S_UseTeleport(this);
    }

    /// <summary>Field number for the "posInfo" field.</summary>
    public const int PosInfoFieldNumber = 1;
    private global::Google.Protobuf.Protocol.PositionInfo posInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.PositionInfo PosInfo {
      get { return posInfo_; }
      set {
        posInfo_ = value;
      }
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 2;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_UseTeleport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_UseTeleport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PosInfo, other.PosInfo)) return false;
      if (ObjectId != other.ObjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (posInfo_ != null) hash ^= PosInfo.GetHashCode();
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (posInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PosInfo);
      }
      if (ObjectId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ObjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (posInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PosInfo);
      }
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_UseTeleport other) {
      if (other == null) {
        return;
      }
      if (other.posInfo_ != null) {
        if (posInfo_ == null) {
          PosInfo = new global::Google.Protobuf.Protocol.PositionInfo();
        }
        PosInfo.MergeFrom(other.PosInfo);
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (posInfo_ == null) {
              PosInfo = new global::Google.Protobuf.Protocol.PositionInfo();
            }
            input.ReadMessage(PosInfo);
            break;
          }
          case 16: {
            ObjectId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_ViewText : pb::IMessage<S_ViewText> {
    private static readonly pb::MessageParser<S_ViewText> _parser = new pb::MessageParser<S_ViewText>(() => new S_ViewText());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_ViewText> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ViewText() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ViewText(S_ViewText other) : this() {
      areaId_ = other.areaId_;
      spawnPos_ = other.spawnPos_ != null ? other.spawnPos_.Clone() : null;
      objectId_ = other.objectId_;
      msgType_ = other.msgType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ViewText Clone() {
      return new S_ViewText(this);
    }

    /// <summary>Field number for the "areaId" field.</summary>
    public const int AreaIdFieldNumber = 1;
    private int areaId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AreaId {
      get { return areaId_; }
      set {
        areaId_ = value;
      }
    }

    /// <summary>Field number for the "spawnPos" field.</summary>
    public const int SpawnPosFieldNumber = 2;
    private global::Google.Protobuf.Protocol.DirVector spawnPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.DirVector SpawnPos {
      get { return spawnPos_; }
      set {
        spawnPos_ = value;
      }
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 3;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "msgType" field.</summary>
    public const int MsgTypeFieldNumber = 4;
    private global::Google.Protobuf.Protocol.SystemMSGType msgType_ = global::Google.Protobuf.Protocol.SystemMSGType.MsgtypeNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.SystemMSGType MsgType {
      get { return msgType_; }
      set {
        msgType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_ViewText);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_ViewText other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AreaId != other.AreaId) return false;
      if (!object.Equals(SpawnPos, other.SpawnPos)) return false;
      if (ObjectId != other.ObjectId) return false;
      if (MsgType != other.MsgType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AreaId != 0) hash ^= AreaId.GetHashCode();
      if (spawnPos_ != null) hash ^= SpawnPos.GetHashCode();
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (MsgType != global::Google.Protobuf.Protocol.SystemMSGType.MsgtypeNone) hash ^= MsgType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AreaId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AreaId);
      }
      if (spawnPos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SpawnPos);
      }
      if (ObjectId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ObjectId);
      }
      if (MsgType != global::Google.Protobuf.Protocol.SystemMSGType.MsgtypeNone) {
        output.WriteRawTag(32);
        output.WriteEnum((int) MsgType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AreaId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AreaId);
      }
      if (spawnPos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpawnPos);
      }
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (MsgType != global::Google.Protobuf.Protocol.SystemMSGType.MsgtypeNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MsgType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_ViewText other) {
      if (other == null) {
        return;
      }
      if (other.AreaId != 0) {
        AreaId = other.AreaId;
      }
      if (other.spawnPos_ != null) {
        if (spawnPos_ == null) {
          SpawnPos = new global::Google.Protobuf.Protocol.DirVector();
        }
        SpawnPos.MergeFrom(other.SpawnPos);
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.MsgType != global::Google.Protobuf.Protocol.SystemMSGType.MsgtypeNone) {
        MsgType = other.MsgType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AreaId = input.ReadInt32();
            break;
          }
          case 18: {
            if (spawnPos_ == null) {
              SpawnPos = new global::Google.Protobuf.Protocol.DirVector();
            }
            input.ReadMessage(SpawnPos);
            break;
          }
          case 24: {
            ObjectId = input.ReadInt32();
            break;
          }
          case 32: {
            MsgType = (global::Google.Protobuf.Protocol.SystemMSGType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_DestroyPortal : pb::IMessage<S_DestroyPortal> {
    private static readonly pb::MessageParser<S_DestroyPortal> _parser = new pb::MessageParser<S_DestroyPortal>(() => new S_DestroyPortal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_DestroyPortal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_DestroyPortal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_DestroyPortal(S_DestroyPortal other) : this() {
      areaId_ = other.areaId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_DestroyPortal Clone() {
      return new S_DestroyPortal(this);
    }

    /// <summary>Field number for the "areaId" field.</summary>
    public const int AreaIdFieldNumber = 1;
    private int areaId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AreaId {
      get { return areaId_; }
      set {
        areaId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_DestroyPortal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_DestroyPortal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AreaId != other.AreaId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AreaId != 0) hash ^= AreaId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AreaId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AreaId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AreaId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AreaId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_DestroyPortal other) {
      if (other == null) {
        return;
      }
      if (other.AreaId != 0) {
        AreaId = other.AreaId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AreaId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_ChangeHp : pb::IMessage<C_ChangeHp> {
    private static readonly pb::MessageParser<C_ChangeHp> _parser = new pb::MessageParser<C_ChangeHp>(() => new C_ChangeHp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_ChangeHp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeHp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeHp(C_ChangeHp other) : this() {
      hp_ = other.hp_;
      isBuff_ = other.isBuff_;
      buffId_ = other.buffId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeHp Clone() {
      return new C_ChangeHp(this);
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 1;
    private float hp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "isBuff" field.</summary>
    public const int IsBuffFieldNumber = 2;
    private bool isBuff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBuff {
      get { return isBuff_; }
      set {
        isBuff_ = value;
      }
    }

    /// <summary>Field number for the "buffId" field.</summary>
    public const int BuffIdFieldNumber = 3;
    private int buffId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuffId {
      get { return buffId_; }
      set {
        buffId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_ChangeHp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_ChangeHp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Hp, other.Hp)) return false;
      if (IsBuff != other.IsBuff) return false;
      if (BuffId != other.BuffId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Hp != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Hp);
      if (IsBuff != false) hash ^= IsBuff.GetHashCode();
      if (BuffId != 0) hash ^= BuffId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Hp != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Hp);
      }
      if (IsBuff != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsBuff);
      }
      if (BuffId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BuffId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Hp != 0F) {
        size += 1 + 4;
      }
      if (IsBuff != false) {
        size += 1 + 1;
      }
      if (BuffId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuffId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_ChangeHp other) {
      if (other == null) {
        return;
      }
      if (other.Hp != 0F) {
        Hp = other.Hp;
      }
      if (other.IsBuff != false) {
        IsBuff = other.IsBuff;
      }
      if (other.BuffId != 0) {
        BuffId = other.BuffId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Hp = input.ReadFloat();
            break;
          }
          case 16: {
            IsBuff = input.ReadBool();
            break;
          }
          case 24: {
            BuffId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_ChangeSpeed : pb::IMessage<C_ChangeSpeed> {
    private static readonly pb::MessageParser<C_ChangeSpeed> _parser = new pb::MessageParser<C_ChangeSpeed>(() => new C_ChangeSpeed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_ChangeSpeed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeSpeed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeSpeed(C_ChangeSpeed other) : this() {
      speed_ = other.speed_;
      isBuff_ = other.isBuff_;
      buffId_ = other.buffId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeSpeed Clone() {
      return new C_ChangeSpeed(this);
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 1;
    private float speed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Speed {
      get { return speed_; }
      set {
        speed_ = value;
      }
    }

    /// <summary>Field number for the "isBuff" field.</summary>
    public const int IsBuffFieldNumber = 2;
    private bool isBuff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBuff {
      get { return isBuff_; }
      set {
        isBuff_ = value;
      }
    }

    /// <summary>Field number for the "buffId" field.</summary>
    public const int BuffIdFieldNumber = 3;
    private int buffId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuffId {
      get { return buffId_; }
      set {
        buffId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_ChangeSpeed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_ChangeSpeed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Speed, other.Speed)) return false;
      if (IsBuff != other.IsBuff) return false;
      if (BuffId != other.BuffId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Speed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Speed);
      if (IsBuff != false) hash ^= IsBuff.GetHashCode();
      if (BuffId != 0) hash ^= BuffId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Speed != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Speed);
      }
      if (IsBuff != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsBuff);
      }
      if (BuffId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BuffId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Speed != 0F) {
        size += 1 + 4;
      }
      if (IsBuff != false) {
        size += 1 + 1;
      }
      if (BuffId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuffId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_ChangeSpeed other) {
      if (other == null) {
        return;
      }
      if (other.Speed != 0F) {
        Speed = other.Speed;
      }
      if (other.IsBuff != false) {
        IsBuff = other.IsBuff;
      }
      if (other.BuffId != 0) {
        BuffId = other.BuffId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Speed = input.ReadFloat();
            break;
          }
          case 16: {
            IsBuff = input.ReadBool();
            break;
          }
          case 24: {
            BuffId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_ChangeSpeed : pb::IMessage<S_ChangeSpeed> {
    private static readonly pb::MessageParser<S_ChangeSpeed> _parser = new pb::MessageParser<S_ChangeSpeed>(() => new S_ChangeSpeed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_ChangeSpeed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeSpeed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeSpeed(S_ChangeSpeed other) : this() {
      speed_ = other.speed_;
      isBuff_ = other.isBuff_;
      objectId_ = other.objectId_;
      buffId_ = other.buffId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeSpeed Clone() {
      return new S_ChangeSpeed(this);
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 1;
    private float speed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Speed {
      get { return speed_; }
      set {
        speed_ = value;
      }
    }

    /// <summary>Field number for the "isBuff" field.</summary>
    public const int IsBuffFieldNumber = 2;
    private bool isBuff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBuff {
      get { return isBuff_; }
      set {
        isBuff_ = value;
      }
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 3;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "buffId" field.</summary>
    public const int BuffIdFieldNumber = 4;
    private int buffId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuffId {
      get { return buffId_; }
      set {
        buffId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_ChangeSpeed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_ChangeSpeed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Speed, other.Speed)) return false;
      if (IsBuff != other.IsBuff) return false;
      if (ObjectId != other.ObjectId) return false;
      if (BuffId != other.BuffId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Speed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Speed);
      if (IsBuff != false) hash ^= IsBuff.GetHashCode();
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (BuffId != 0) hash ^= BuffId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Speed != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Speed);
      }
      if (IsBuff != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsBuff);
      }
      if (ObjectId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ObjectId);
      }
      if (BuffId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BuffId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Speed != 0F) {
        size += 1 + 4;
      }
      if (IsBuff != false) {
        size += 1 + 1;
      }
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (BuffId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuffId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_ChangeSpeed other) {
      if (other == null) {
        return;
      }
      if (other.Speed != 0F) {
        Speed = other.Speed;
      }
      if (other.IsBuff != false) {
        IsBuff = other.IsBuff;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.BuffId != 0) {
        BuffId = other.BuffId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Speed = input.ReadFloat();
            break;
          }
          case 16: {
            IsBuff = input.ReadBool();
            break;
          }
          case 24: {
            ObjectId = input.ReadInt32();
            break;
          }
          case 32: {
            BuffId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_ChangeAttack : pb::IMessage<C_ChangeAttack> {
    private static readonly pb::MessageParser<C_ChangeAttack> _parser = new pb::MessageParser<C_ChangeAttack>(() => new C_ChangeAttack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_ChangeAttack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeAttack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeAttack(C_ChangeAttack other) : this() {
      attack_ = other.attack_;
      isBuff_ = other.isBuff_;
      buffId_ = other.buffId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeAttack Clone() {
      return new C_ChangeAttack(this);
    }

    /// <summary>Field number for the "attack" field.</summary>
    public const int AttackFieldNumber = 1;
    private float attack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Attack {
      get { return attack_; }
      set {
        attack_ = value;
      }
    }

    /// <summary>Field number for the "isBuff" field.</summary>
    public const int IsBuffFieldNumber = 2;
    private bool isBuff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBuff {
      get { return isBuff_; }
      set {
        isBuff_ = value;
      }
    }

    /// <summary>Field number for the "buffId" field.</summary>
    public const int BuffIdFieldNumber = 3;
    private int buffId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuffId {
      get { return buffId_; }
      set {
        buffId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_ChangeAttack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_ChangeAttack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Attack, other.Attack)) return false;
      if (IsBuff != other.IsBuff) return false;
      if (BuffId != other.BuffId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Attack != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Attack);
      if (IsBuff != false) hash ^= IsBuff.GetHashCode();
      if (BuffId != 0) hash ^= BuffId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Attack != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Attack);
      }
      if (IsBuff != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsBuff);
      }
      if (BuffId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BuffId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Attack != 0F) {
        size += 1 + 4;
      }
      if (IsBuff != false) {
        size += 1 + 1;
      }
      if (BuffId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuffId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_ChangeAttack other) {
      if (other == null) {
        return;
      }
      if (other.Attack != 0F) {
        Attack = other.Attack;
      }
      if (other.IsBuff != false) {
        IsBuff = other.IsBuff;
      }
      if (other.BuffId != 0) {
        BuffId = other.BuffId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Attack = input.ReadFloat();
            break;
          }
          case 16: {
            IsBuff = input.ReadBool();
            break;
          }
          case 24: {
            BuffId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_ChangeAttack : pb::IMessage<S_ChangeAttack> {
    private static readonly pb::MessageParser<S_ChangeAttack> _parser = new pb::MessageParser<S_ChangeAttack>(() => new S_ChangeAttack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_ChangeAttack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeAttack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeAttack(S_ChangeAttack other) : this() {
      attack_ = other.attack_;
      isBuff_ = other.isBuff_;
      objectId_ = other.objectId_;
      buffId_ = other.buffId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeAttack Clone() {
      return new S_ChangeAttack(this);
    }

    /// <summary>Field number for the "attack" field.</summary>
    public const int AttackFieldNumber = 1;
    private float attack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Attack {
      get { return attack_; }
      set {
        attack_ = value;
      }
    }

    /// <summary>Field number for the "isBuff" field.</summary>
    public const int IsBuffFieldNumber = 2;
    private bool isBuff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBuff {
      get { return isBuff_; }
      set {
        isBuff_ = value;
      }
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 3;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "buffId" field.</summary>
    public const int BuffIdFieldNumber = 4;
    private int buffId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuffId {
      get { return buffId_; }
      set {
        buffId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_ChangeAttack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_ChangeAttack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Attack, other.Attack)) return false;
      if (IsBuff != other.IsBuff) return false;
      if (ObjectId != other.ObjectId) return false;
      if (BuffId != other.BuffId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Attack != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Attack);
      if (IsBuff != false) hash ^= IsBuff.GetHashCode();
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (BuffId != 0) hash ^= BuffId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Attack != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Attack);
      }
      if (IsBuff != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsBuff);
      }
      if (ObjectId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ObjectId);
      }
      if (BuffId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BuffId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Attack != 0F) {
        size += 1 + 4;
      }
      if (IsBuff != false) {
        size += 1 + 1;
      }
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (BuffId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuffId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_ChangeAttack other) {
      if (other == null) {
        return;
      }
      if (other.Attack != 0F) {
        Attack = other.Attack;
      }
      if (other.IsBuff != false) {
        IsBuff = other.IsBuff;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.BuffId != 0) {
        BuffId = other.BuffId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Attack = input.ReadFloat();
            break;
          }
          case 16: {
            IsBuff = input.ReadBool();
            break;
          }
          case 24: {
            ObjectId = input.ReadInt32();
            break;
          }
          case 32: {
            BuffId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_ChangeSight : pb::IMessage<C_ChangeSight> {
    private static readonly pb::MessageParser<C_ChangeSight> _parser = new pb::MessageParser<C_ChangeSight>(() => new C_ChangeSight());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_ChangeSight> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeSight() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeSight(C_ChangeSight other) : this() {
      sight_ = other.sight_;
      isBuff_ = other.isBuff_;
      buffId_ = other.buffId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ChangeSight Clone() {
      return new C_ChangeSight(this);
    }

    /// <summary>Field number for the "sight" field.</summary>
    public const int SightFieldNumber = 1;
    private float sight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Sight {
      get { return sight_; }
      set {
        sight_ = value;
      }
    }

    /// <summary>Field number for the "isBuff" field.</summary>
    public const int IsBuffFieldNumber = 2;
    private bool isBuff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBuff {
      get { return isBuff_; }
      set {
        isBuff_ = value;
      }
    }

    /// <summary>Field number for the "buffId" field.</summary>
    public const int BuffIdFieldNumber = 3;
    private int buffId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuffId {
      get { return buffId_; }
      set {
        buffId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_ChangeSight);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_ChangeSight other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Sight, other.Sight)) return false;
      if (IsBuff != other.IsBuff) return false;
      if (BuffId != other.BuffId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Sight != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Sight);
      if (IsBuff != false) hash ^= IsBuff.GetHashCode();
      if (BuffId != 0) hash ^= BuffId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Sight != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Sight);
      }
      if (IsBuff != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsBuff);
      }
      if (BuffId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BuffId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Sight != 0F) {
        size += 1 + 4;
      }
      if (IsBuff != false) {
        size += 1 + 1;
      }
      if (BuffId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuffId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_ChangeSight other) {
      if (other == null) {
        return;
      }
      if (other.Sight != 0F) {
        Sight = other.Sight;
      }
      if (other.IsBuff != false) {
        IsBuff = other.IsBuff;
      }
      if (other.BuffId != 0) {
        BuffId = other.BuffId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Sight = input.ReadFloat();
            break;
          }
          case 16: {
            IsBuff = input.ReadBool();
            break;
          }
          case 24: {
            BuffId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_ChangeSight : pb::IMessage<S_ChangeSight> {
    private static readonly pb::MessageParser<S_ChangeSight> _parser = new pb::MessageParser<S_ChangeSight>(() => new S_ChangeSight());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_ChangeSight> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeSight() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeSight(S_ChangeSight other) : this() {
      sight_ = other.sight_;
      isBuff_ = other.isBuff_;
      objectId_ = other.objectId_;
      buffId_ = other.buffId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ChangeSight Clone() {
      return new S_ChangeSight(this);
    }

    /// <summary>Field number for the "sight" field.</summary>
    public const int SightFieldNumber = 1;
    private float sight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Sight {
      get { return sight_; }
      set {
        sight_ = value;
      }
    }

    /// <summary>Field number for the "isBuff" field.</summary>
    public const int IsBuffFieldNumber = 2;
    private bool isBuff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBuff {
      get { return isBuff_; }
      set {
        isBuff_ = value;
      }
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 3;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "buffId" field.</summary>
    public const int BuffIdFieldNumber = 4;
    private int buffId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuffId {
      get { return buffId_; }
      set {
        buffId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_ChangeSight);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_ChangeSight other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Sight, other.Sight)) return false;
      if (IsBuff != other.IsBuff) return false;
      if (ObjectId != other.ObjectId) return false;
      if (BuffId != other.BuffId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Sight != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Sight);
      if (IsBuff != false) hash ^= IsBuff.GetHashCode();
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (BuffId != 0) hash ^= BuffId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Sight != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Sight);
      }
      if (IsBuff != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsBuff);
      }
      if (ObjectId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ObjectId);
      }
      if (BuffId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BuffId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Sight != 0F) {
        size += 1 + 4;
      }
      if (IsBuff != false) {
        size += 1 + 1;
      }
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (BuffId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuffId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_ChangeSight other) {
      if (other == null) {
        return;
      }
      if (other.Sight != 0F) {
        Sight = other.Sight;
      }
      if (other.IsBuff != false) {
        IsBuff = other.IsBuff;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.BuffId != 0) {
        BuffId = other.BuffId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Sight = input.ReadFloat();
            break;
          }
          case 16: {
            IsBuff = input.ReadBool();
            break;
          }
          case 24: {
            ObjectId = input.ReadInt32();
            break;
          }
          case 32: {
            BuffId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_AddBlock : pb::IMessage<S_AddBlock> {
    private static readonly pb::MessageParser<S_AddBlock> _parser = new pb::MessageParser<S_AddBlock>(() => new S_AddBlock());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_AddBlock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_AddBlock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_AddBlock(S_AddBlock other) : this() {
      isBuff_ = other.isBuff_;
      objectId_ = other.objectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_AddBlock Clone() {
      return new S_AddBlock(this);
    }

    /// <summary>Field number for the "isBuff" field.</summary>
    public const int IsBuffFieldNumber = 1;
    private bool isBuff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBuff {
      get { return isBuff_; }
      set {
        isBuff_ = value;
      }
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 2;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_AddBlock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_AddBlock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsBuff != other.IsBuff) return false;
      if (ObjectId != other.ObjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsBuff != false) hash ^= IsBuff.GetHashCode();
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsBuff != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsBuff);
      }
      if (ObjectId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ObjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsBuff != false) {
        size += 1 + 1;
      }
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_AddBlock other) {
      if (other == null) {
        return;
      }
      if (other.IsBuff != false) {
        IsBuff = other.IsBuff;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsBuff = input.ReadBool();
            break;
          }
          case 16: {
            ObjectId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_AddBlock : pb::IMessage<C_AddBlock> {
    private static readonly pb::MessageParser<C_AddBlock> _parser = new pb::MessageParser<C_AddBlock>(() => new C_AddBlock());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_AddBlock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_AddBlock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_AddBlock(C_AddBlock other) : this() {
      isBuff_ = other.isBuff_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_AddBlock Clone() {
      return new C_AddBlock(this);
    }

    /// <summary>Field number for the "isBuff" field.</summary>
    public const int IsBuffFieldNumber = 1;
    private bool isBuff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBuff {
      get { return isBuff_; }
      set {
        isBuff_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_AddBlock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_AddBlock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsBuff != other.IsBuff) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsBuff != false) hash ^= IsBuff.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsBuff != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsBuff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsBuff != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_AddBlock other) {
      if (other == null) {
        return;
      }
      if (other.IsBuff != false) {
        IsBuff = other.IsBuff;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsBuff = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_ShopBuff : pb::IMessage<C_ShopBuff> {
    private static readonly pb::MessageParser<C_ShopBuff> _parser = new pb::MessageParser<C_ShopBuff>(() => new C_ShopBuff());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_ShopBuff> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ShopBuff() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ShopBuff(C_ShopBuff other) : this() {
      isBuff_ = other.isBuff_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ShopBuff Clone() {
      return new C_ShopBuff(this);
    }

    /// <summary>Field number for the "isBuff" field.</summary>
    public const int IsBuffFieldNumber = 1;
    private bool isBuff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBuff {
      get { return isBuff_; }
      set {
        isBuff_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Google.Protobuf.Protocol.ShopBuffType type_ = global::Google.Protobuf.Protocol.ShopBuffType.ShopBuffNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.ShopBuffType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_ShopBuff);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_ShopBuff other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsBuff != other.IsBuff) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsBuff != false) hash ^= IsBuff.GetHashCode();
      if (Type != global::Google.Protobuf.Protocol.ShopBuffType.ShopBuffNone) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsBuff != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsBuff);
      }
      if (Type != global::Google.Protobuf.Protocol.ShopBuffType.ShopBuffNone) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsBuff != false) {
        size += 1 + 1;
      }
      if (Type != global::Google.Protobuf.Protocol.ShopBuffType.ShopBuffNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_ShopBuff other) {
      if (other == null) {
        return;
      }
      if (other.IsBuff != false) {
        IsBuff = other.IsBuff;
      }
      if (other.Type != global::Google.Protobuf.Protocol.ShopBuffType.ShopBuffNone) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsBuff = input.ReadBool();
            break;
          }
          case 16: {
            Type = (global::Google.Protobuf.Protocol.ShopBuffType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_ShopBuff : pb::IMessage<S_ShopBuff> {
    private static readonly pb::MessageParser<S_ShopBuff> _parser = new pb::MessageParser<S_ShopBuff>(() => new S_ShopBuff());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_ShopBuff> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ShopBuff() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ShopBuff(S_ShopBuff other) : this() {
      isBuff_ = other.isBuff_;
      type_ = other.type_;
      objectId_ = other.objectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ShopBuff Clone() {
      return new S_ShopBuff(this);
    }

    /// <summary>Field number for the "isBuff" field.</summary>
    public const int IsBuffFieldNumber = 1;
    private bool isBuff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBuff {
      get { return isBuff_; }
      set {
        isBuff_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Google.Protobuf.Protocol.ShopBuffType type_ = global::Google.Protobuf.Protocol.ShopBuffType.ShopBuffNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.ShopBuffType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 3;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_ShopBuff);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_ShopBuff other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsBuff != other.IsBuff) return false;
      if (Type != other.Type) return false;
      if (ObjectId != other.ObjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsBuff != false) hash ^= IsBuff.GetHashCode();
      if (Type != global::Google.Protobuf.Protocol.ShopBuffType.ShopBuffNone) hash ^= Type.GetHashCode();
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsBuff != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsBuff);
      }
      if (Type != global::Google.Protobuf.Protocol.ShopBuffType.ShopBuffNone) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (ObjectId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ObjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsBuff != false) {
        size += 1 + 1;
      }
      if (Type != global::Google.Protobuf.Protocol.ShopBuffType.ShopBuffNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_ShopBuff other) {
      if (other == null) {
        return;
      }
      if (other.IsBuff != false) {
        IsBuff = other.IsBuff;
      }
      if (other.Type != global::Google.Protobuf.Protocol.ShopBuffType.ShopBuffNone) {
        Type = other.Type;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsBuff = input.ReadBool();
            break;
          }
          case 16: {
            Type = (global::Google.Protobuf.Protocol.ShopBuffType) input.ReadEnum();
            break;
          }
          case 24: {
            ObjectId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_BreakBlock : pb::IMessage<S_BreakBlock> {
    private static readonly pb::MessageParser<S_BreakBlock> _parser = new pb::MessageParser<S_BreakBlock>(() => new S_BreakBlock());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_BreakBlock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_BreakBlock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_BreakBlock(S_BreakBlock other) : this() {
      objectId_ = other.objectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_BreakBlock Clone() {
      return new S_BreakBlock(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_BreakBlock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_BreakBlock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ObjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_BreakBlock other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_MapManipulation : pb::IMessage<S_MapManipulation> {
    private static readonly pb::MessageParser<S_MapManipulation> _parser = new pb::MessageParser<S_MapManipulation>(() => new S_MapManipulation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_MapManipulation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_MapManipulation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_MapManipulation(S_MapManipulation other) : this() {
      mapData_ = other.mapData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_MapManipulation Clone() {
      return new S_MapManipulation(this);
    }

    /// <summary>Field number for the "mapData" field.</summary>
    public const int MapDataFieldNumber = 1;
    private string mapData_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MapData {
      get { return mapData_; }
      set {
        mapData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_MapManipulation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_MapManipulation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapData != other.MapData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MapData.Length != 0) hash ^= MapData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MapData.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MapData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MapData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MapData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_MapManipulation other) {
      if (other == null) {
        return;
      }
      if (other.MapData.Length != 0) {
        MapData = other.MapData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MapData = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_MapManipulation : pb::IMessage<C_MapManipulation> {
    private static readonly pb::MessageParser<C_MapManipulation> _parser = new pb::MessageParser<C_MapManipulation>(() => new C_MapManipulation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_MapManipulation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_MapManipulation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_MapManipulation(C_MapManipulation other) : this() {
      mapData_ = other.mapData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_MapManipulation Clone() {
      return new C_MapManipulation(this);
    }

    /// <summary>Field number for the "mapData" field.</summary>
    public const int MapDataFieldNumber = 1;
    private string mapData_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MapData {
      get { return mapData_; }
      set {
        mapData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_MapManipulation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_MapManipulation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapData != other.MapData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MapData.Length != 0) hash ^= MapData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MapData.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MapData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MapData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MapData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_MapManipulation other) {
      if (other == null) {
        return;
      }
      if (other.MapData.Length != 0) {
        MapData = other.MapData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MapData = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_ForceQuit : pb::IMessage<S_ForceQuit> {
    private static readonly pb::MessageParser<S_ForceQuit> _parser = new pb::MessageParser<S_ForceQuit>(() => new S_ForceQuit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_ForceQuit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ForceQuit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ForceQuit(S_ForceQuit other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ForceQuit Clone() {
      return new S_ForceQuit(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_ForceQuit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_ForceQuit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_ForceQuit other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ObjectInfo : pb::IMessage<ObjectInfo> {
    private static readonly pb::MessageParser<ObjectInfo> _parser = new pb::MessageParser<ObjectInfo>(() => new ObjectInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjectInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectInfo(ObjectInfo other) : this() {
      objectId_ = other.objectId_;
      name_ = other.name_;
      posInfo_ = other.posInfo_ != null ? other.posInfo_.Clone() : null;
      stat_ = other.stat_ != null ? other.stat_.Clone() : null;
      weaponType_ = other.weaponType_;
      gold_ = other.gold_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectInfo Clone() {
      return new ObjectInfo(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "posInfo" field.</summary>
    public const int PosInfoFieldNumber = 3;
    private global::Google.Protobuf.Protocol.PositionInfo posInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.PositionInfo PosInfo {
      get { return posInfo_; }
      set {
        posInfo_ = value;
      }
    }

    /// <summary>Field number for the "stat" field.</summary>
    public const int StatFieldNumber = 4;
    private global::Google.Protobuf.Protocol.Stat stat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.Stat Stat {
      get { return stat_; }
      set {
        stat_ = value;
      }
    }

    /// <summary>Field number for the "weaponType" field.</summary>
    public const int WeaponTypeFieldNumber = 5;
    private global::Google.Protobuf.Protocol.WeaponType weaponType_ = global::Google.Protobuf.Protocol.WeaponType.Default;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.WeaponType WeaponType {
      get { return weaponType_; }
      set {
        weaponType_ = value;
      }
    }

    /// <summary>Field number for the "gold" field.</summary>
    public const int GoldFieldNumber = 6;
    private int gold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjectInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjectInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(PosInfo, other.PosInfo)) return false;
      if (!object.Equals(Stat, other.Stat)) return false;
      if (WeaponType != other.WeaponType) return false;
      if (Gold != other.Gold) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (posInfo_ != null) hash ^= PosInfo.GetHashCode();
      if (stat_ != null) hash ^= Stat.GetHashCode();
      if (WeaponType != global::Google.Protobuf.Protocol.WeaponType.Default) hash ^= WeaponType.GetHashCode();
      if (Gold != 0) hash ^= Gold.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ObjectId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (posInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PosInfo);
      }
      if (stat_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Stat);
      }
      if (WeaponType != global::Google.Protobuf.Protocol.WeaponType.Default) {
        output.WriteRawTag(40);
        output.WriteEnum((int) WeaponType);
      }
      if (Gold != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Gold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (posInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PosInfo);
      }
      if (stat_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stat);
      }
      if (WeaponType != global::Google.Protobuf.Protocol.WeaponType.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) WeaponType);
      }
      if (Gold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gold);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjectInfo other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.posInfo_ != null) {
        if (posInfo_ == null) {
          PosInfo = new global::Google.Protobuf.Protocol.PositionInfo();
        }
        PosInfo.MergeFrom(other.PosInfo);
      }
      if (other.stat_ != null) {
        if (stat_ == null) {
          Stat = new global::Google.Protobuf.Protocol.Stat();
        }
        Stat.MergeFrom(other.Stat);
      }
      if (other.WeaponType != global::Google.Protobuf.Protocol.WeaponType.Default) {
        WeaponType = other.WeaponType;
      }
      if (other.Gold != 0) {
        Gold = other.Gold;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (posInfo_ == null) {
              PosInfo = new global::Google.Protobuf.Protocol.PositionInfo();
            }
            input.ReadMessage(PosInfo);
            break;
          }
          case 34: {
            if (stat_ == null) {
              Stat = new global::Google.Protobuf.Protocol.Stat();
            }
            input.ReadMessage(Stat);
            break;
          }
          case 40: {
            WeaponType = (global::Google.Protobuf.Protocol.WeaponType) input.ReadEnum();
            break;
          }
          case 48: {
            Gold = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PositionInfo : pb::IMessage<PositionInfo> {
    private static readonly pb::MessageParser<PositionInfo> _parser = new pb::MessageParser<PositionInfo>(() => new PositionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PositionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionInfo(PositionInfo other) : this() {
      state_ = other.state_;
      posX_ = other.posX_;
      posY_ = other.posY_;
      rotZ_ = other.rotZ_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionInfo Clone() {
      return new PositionInfo(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private global::Google.Protobuf.Protocol.CreatureState state_ = global::Google.Protobuf.Protocol.CreatureState.Idle;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.CreatureState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "posX" field.</summary>
    public const int PosXFieldNumber = 2;
    private float posX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosX {
      get { return posX_; }
      set {
        posX_ = value;
      }
    }

    /// <summary>Field number for the "posY" field.</summary>
    public const int PosYFieldNumber = 3;
    private float posY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosY {
      get { return posY_; }
      set {
        posY_ = value;
      }
    }

    /// <summary>Field number for the "rotZ" field.</summary>
    public const int RotZFieldNumber = 4;
    private float rotZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RotZ {
      get { return rotZ_; }
      set {
        rotZ_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PositionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PositionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosX, other.PosX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosY, other.PosY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotZ, other.RotZ)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != global::Google.Protobuf.Protocol.CreatureState.Idle) hash ^= State.GetHashCode();
      if (PosX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosX);
      if (PosY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosY);
      if (RotZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotZ);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (State != global::Google.Protobuf.Protocol.CreatureState.Idle) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (PosX != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PosX);
      }
      if (PosY != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(PosY);
      }
      if (RotZ != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(RotZ);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != global::Google.Protobuf.Protocol.CreatureState.Idle) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (PosX != 0F) {
        size += 1 + 4;
      }
      if (PosY != 0F) {
        size += 1 + 4;
      }
      if (RotZ != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PositionInfo other) {
      if (other == null) {
        return;
      }
      if (other.State != global::Google.Protobuf.Protocol.CreatureState.Idle) {
        State = other.State;
      }
      if (other.PosX != 0F) {
        PosX = other.PosX;
      }
      if (other.PosY != 0F) {
        PosY = other.PosY;
      }
      if (other.RotZ != 0F) {
        RotZ = other.RotZ;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = (global::Google.Protobuf.Protocol.CreatureState) input.ReadEnum();
            break;
          }
          case 21: {
            PosX = input.ReadFloat();
            break;
          }
          case 29: {
            PosY = input.ReadFloat();
            break;
          }
          case 37: {
            RotZ = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DirVector : pb::IMessage<DirVector> {
    private static readonly pb::MessageParser<DirVector> _parser = new pb::MessageParser<DirVector>(() => new DirVector());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DirVector> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DirVector() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DirVector(DirVector other) : this() {
      posX_ = other.posX_;
      posY_ = other.posY_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DirVector Clone() {
      return new DirVector(this);
    }

    /// <summary>Field number for the "posX" field.</summary>
    public const int PosXFieldNumber = 1;
    private float posX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosX {
      get { return posX_; }
      set {
        posX_ = value;
      }
    }

    /// <summary>Field number for the "posY" field.</summary>
    public const int PosYFieldNumber = 2;
    private float posY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosY {
      get { return posY_; }
      set {
        posY_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DirVector);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DirVector other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosX, other.PosX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosY, other.PosY)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PosX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosX);
      if (PosY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosY);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PosX != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(PosX);
      }
      if (PosY != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PosY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PosX != 0F) {
        size += 1 + 4;
      }
      if (PosY != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DirVector other) {
      if (other == null) {
        return;
      }
      if (other.PosX != 0F) {
        PosX = other.PosX;
      }
      if (other.PosY != 0F) {
        PosY = other.PosY;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            PosX = input.ReadFloat();
            break;
          }
          case 21: {
            PosY = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SkillInfo : pb::IMessage<SkillInfo> {
    private static readonly pb::MessageParser<SkillInfo> _parser = new pb::MessageParser<SkillInfo>(() => new SkillInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SkillInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillInfo(SkillInfo other) : this() {
      skillId_ = other.skillId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillInfo Clone() {
      return new SkillInfo(this);
    }

    /// <summary>Field number for the "skillId" field.</summary>
    public const int SkillIdFieldNumber = 1;
    private int skillId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkillId {
      get { return skillId_; }
      set {
        skillId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SkillInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SkillInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SkillId != other.SkillId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SkillId != 0) hash ^= SkillId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SkillId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SkillId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SkillInfo other) {
      if (other == null) {
        return;
      }
      if (other.SkillId != 0) {
        SkillId = other.SkillId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SkillId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Stat : pb::IMessage<Stat> {
    private static readonly pb::MessageParser<Stat> _parser = new pb::MessageParser<Stat>(() => new Stat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Stat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stat(Stat other) : this() {
      hp_ = other.hp_;
      maxHp_ = other.maxHp_;
      attack_ = other.attack_;
      defense_ = other.defense_;
      speed_ = other.speed_;
      cameraSize_ = other.cameraSize_;
      cost_ = other.cost_;
      coolTime_ = other.coolTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stat Clone() {
      return new Stat(this);
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 1;
    private float hp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "maxHp" field.</summary>
    public const int MaxHpFieldNumber = 2;
    private float maxHp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MaxHp {
      get { return maxHp_; }
      set {
        maxHp_ = value;
      }
    }

    /// <summary>Field number for the "attack" field.</summary>
    public const int AttackFieldNumber = 3;
    private float attack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Attack {
      get { return attack_; }
      set {
        attack_ = value;
      }
    }

    /// <summary>Field number for the "defense" field.</summary>
    public const int DefenseFieldNumber = 4;
    private float defense_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Defense {
      get { return defense_; }
      set {
        defense_ = value;
      }
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 5;
    private float speed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Speed {
      get { return speed_; }
      set {
        speed_ = value;
      }
    }

    /// <summary>Field number for the "cameraSize" field.</summary>
    public const int CameraSizeFieldNumber = 6;
    private float cameraSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float CameraSize {
      get { return cameraSize_; }
      set {
        cameraSize_ = value;
      }
    }

    /// <summary>Field number for the "cost" field.</summary>
    public const int CostFieldNumber = 7;
    private int cost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cost {
      get { return cost_; }
      set {
        cost_ = value;
      }
    }

    /// <summary>Field number for the "coolTime" field.</summary>
    public const int CoolTimeFieldNumber = 8;
    private float coolTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float CoolTime {
      get { return coolTime_; }
      set {
        coolTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Stat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Stat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Hp, other.Hp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxHp, other.MaxHp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Attack, other.Attack)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Defense, other.Defense)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Speed, other.Speed)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CameraSize, other.CameraSize)) return false;
      if (Cost != other.Cost) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CoolTime, other.CoolTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Hp != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Hp);
      if (MaxHp != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxHp);
      if (Attack != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Attack);
      if (Defense != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Defense);
      if (Speed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Speed);
      if (CameraSize != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CameraSize);
      if (Cost != 0) hash ^= Cost.GetHashCode();
      if (CoolTime != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CoolTime);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Hp != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Hp);
      }
      if (MaxHp != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(MaxHp);
      }
      if (Attack != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Attack);
      }
      if (Defense != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Defense);
      }
      if (Speed != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Speed);
      }
      if (CameraSize != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(CameraSize);
      }
      if (Cost != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Cost);
      }
      if (CoolTime != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(CoolTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Hp != 0F) {
        size += 1 + 4;
      }
      if (MaxHp != 0F) {
        size += 1 + 4;
      }
      if (Attack != 0F) {
        size += 1 + 4;
      }
      if (Defense != 0F) {
        size += 1 + 4;
      }
      if (Speed != 0F) {
        size += 1 + 4;
      }
      if (CameraSize != 0F) {
        size += 1 + 4;
      }
      if (Cost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cost);
      }
      if (CoolTime != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Stat other) {
      if (other == null) {
        return;
      }
      if (other.Hp != 0F) {
        Hp = other.Hp;
      }
      if (other.MaxHp != 0F) {
        MaxHp = other.MaxHp;
      }
      if (other.Attack != 0F) {
        Attack = other.Attack;
      }
      if (other.Defense != 0F) {
        Defense = other.Defense;
      }
      if (other.Speed != 0F) {
        Speed = other.Speed;
      }
      if (other.CameraSize != 0F) {
        CameraSize = other.CameraSize;
      }
      if (other.Cost != 0) {
        Cost = other.Cost;
      }
      if (other.CoolTime != 0F) {
        CoolTime = other.CoolTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Hp = input.ReadFloat();
            break;
          }
          case 21: {
            MaxHp = input.ReadFloat();
            break;
          }
          case 29: {
            Attack = input.ReadFloat();
            break;
          }
          case 37: {
            Defense = input.ReadFloat();
            break;
          }
          case 45: {
            Speed = input.ReadFloat();
            break;
          }
          case 53: {
            CameraSize = input.ReadFloat();
            break;
          }
          case 56: {
            Cost = input.ReadInt32();
            break;
          }
          case 69: {
            CoolTime = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
